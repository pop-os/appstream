<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="appstream-AppstreamSearchQuery">
<refmeta>
<refentrytitle role="top_of_page" id="appstream-AppstreamSearchQuery.top_of_page">AppstreamSearchQuery</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  APPSTREAM Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AppstreamSearchQuery</refname>
<refpurpose>Class describing a query on the AppStream application database</refpurpose>
</refnamediv>

<refsynopsisdiv id="appstream-AppstreamSearchQuery.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="APPSTREAM-TYPE-SEARCH-QUERY:CAPS">APPSTREAM_TYPE_SEARCH_QUERY</link>
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="appstream-search-query-get-search-all-categories">appstream_search_query_get_search_all_categories</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-search-query-set-search-all-categories">appstream_search_query_set_search_all_categories</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-search-query-set-categories-from-string">appstream_search_query_set_categories_from_string</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>);
<link linkend="AppstreamSearchQuery"><returnvalue>AppstreamSearchQuery</returnvalue></link> * <link linkend="appstream-search-query-new">appstream_search_query_new</link>       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *term</parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="appstream-search-query-get-search-term">appstream_search_query_get_search_term</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-search-query-set-search-term">appstream_search_query_set_search_term</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> **            <link linkend="appstream-search-query-get-categories">appstream_search_query_get_categories</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> *result_length1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-search-query-set-categories">appstream_search_query_set_categories</link>
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> value_length1</parameter>);
struct              <link linkend="AppstreamSearchQuery">AppstreamSearchQuery</link>;
struct              <link linkend="AppstreamSearchQueryClass">AppstreamSearchQueryClass</link>;
#define             <link linkend="APPSTREAM-TYPE-DATABASE:CAPS">APPSTREAM_TYPE_DATABASE</link>
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="appstream-database-open">appstream_database_open</link>             (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="appstream-database-db-exists">appstream_database_db_exists</link>        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);
<link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link> *         <link linkend="appstream-database-get-all-applications">appstream_database_get_all_applications</link>
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);
<link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link> *         <link linkend="appstream-database-find-applications">appstream_database_find_applications</link>
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *query</parameter>);
<link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link> *         <link linkend="appstream-database-find-applications-by-str">appstream_database_find_applications_by_str</link>
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *search_str</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-database-refresh">appstream_database_refresh</link>          (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> _callback_</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> _user_data_</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="appstream-database-refresh-finish">appstream_database_refresh_finish</link>   (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *_res_</parameter>,
                                                         <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);
<link linkend="AppstreamDatabase"><returnvalue>AppstreamDatabase</returnvalue></link> * <link linkend="appstream-database-new">appstream_database_new</link>              (<parameter><type>void</type></parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="appstream-database-get-database-path">appstream_database_get_database_path</link>
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);
struct              <link linkend="AppstreamDatabase">AppstreamDatabase</link>;
struct              <link linkend="AppstreamDatabaseClass">AppstreamDatabaseClass</link>;
</synopsis>
</refsynopsisdiv>

<refsect1 id="appstream-AppstreamSearchQuery.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="appstream-AppstreamSearchQuery.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="APPSTREAM-TYPE-SEARCH-QUERY:CAPS" role="macro">
<title>APPSTREAM_TYPE_SEARCH_QUERY</title>
<indexterm zone="APPSTREAM-TYPE-SEARCH-QUERY:CAPS"><primary sortas="TYPE_SEARCH_QUERY">APPSTREAM_TYPE_SEARCH_QUERY</primary></indexterm>
<programlisting>#define APPSTREAM_TYPE_SEARCH_QUERY (appstream_search_query_get_type ())
</programlisting>
<para>
The type for <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link>.
</para></refsect2>
<refsect2 id="appstream-search-query-get-search-all-categories" role="function">
<title>appstream_search_query_get_search_all_categories ()</title>
<indexterm zone="appstream-search-query-get-search-all-categories"><primary sortas="search_query_get_search_all_categories">appstream_search_query_get_search_all_categories</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            appstream_search_query_get_search_all_categories
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>TRUE if we search in all categories</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-set-search-all-categories" role="function">
<title>appstream_search_query_set_search_all_categories ()</title>
<indexterm zone="appstream-search-query-set-search-all-categories"><primary sortas="search_query_set_search_all_categories">appstream_search_query_set_search_all_categories</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_search_query_set_search_all_categories
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>);</programlisting>
<para>
Shortcut to set that we should search in all categories
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-set-categories-from-string" role="function">
<title>appstream_search_query_set_categories_from_string ()</title>
<indexterm zone="appstream-search-query-set-categories-from-string"><primary sortas="search_query_set_categories_from_string">appstream_search_query_set_categories_from_string</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_search_query_set_categories_from_string
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>);</programlisting>
<para>
Set the categories list from a string
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categories_str</parameter>&#160;:</term>
<listitem><simpara>&nbsp;.  Comma-separated list of category-names. <emphasis role="annotation">[<acronym>in</acronym>]</emphasis></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-new" role="function">
<title>appstream_search_query_new ()</title>
<indexterm zone="appstream-search-query-new"><primary sortas="search_query_new">appstream_search_query_new</primary></indexterm>
<programlisting><link linkend="AppstreamSearchQuery"><returnvalue>AppstreamSearchQuery</returnvalue></link> * appstream_search_query_new       (<parameter>const <link linkend="gchar"><type>gchar</type></link> *term</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>term</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-get-search-term" role="function">
<title>appstream_search_query_get_search_term ()</title>
<indexterm zone="appstream-search-query-get-search-term"><primary sortas="search_query_get_search_term">appstream_search_query_get_search_term</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       appstream_search_query_get_search_term
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>);</programlisting>
<para>
Get and return the current value of the <link linkend="AppstreamSearchQuery--search-term"><type>"search-term"</type></link> property.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance to query</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the value of the <link linkend="AppstreamSearchQuery--search-term"><type>"search-term"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-set-search-term" role="function">
<title>appstream_search_query_set_search_term ()</title>
<indexterm zone="appstream-search-query-set-search-term"><primary sortas="search_query_set_search_term">appstream_search_query_set_search_term</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_search_query_set_search_term
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Set the value of the <link linkend="AppstreamSearchQuery--search-term"><type>"search-term"</type></link> property to <parameter>value</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance to modify</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>the new value of the <link linkend="AppstreamSearchQuery--search-term"><type>"search-term"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-get-categories" role="function">
<title>appstream_search_query_get_categories ()</title>
<indexterm zone="appstream-search-query-get-categories"><primary sortas="search_query_get_categories">appstream_search_query_get_categories</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> **            appstream_search_query_get_categories
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> *result_length1</parameter>);</programlisting>
<para>
Get and return the current value of the <link linkend="AppstreamSearchQuery--categories"><type>"categories"</type></link> property.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance to query</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the value of the <link linkend="AppstreamSearchQuery--categories"><type>"categories"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-search-query-set-categories" role="function">
<title>appstream_search_query_set_categories ()</title>
<indexterm zone="appstream-search-query-set-categories"><primary sortas="search_query_set_categories">appstream_search_query_set_categories</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_search_query_set_categories
                                                        (<parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *self</parameter>,
                                                         <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> value_length1</parameter>);</programlisting>
<para>
Set the value of the <link linkend="AppstreamSearchQuery--categories"><type>"categories"</type></link> property to <parameter>value</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> instance to modify</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>the new value of the <link linkend="AppstreamSearchQuery--categories"><type>"categories"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AppstreamSearchQuery" role="struct">
<title>struct AppstreamSearchQuery</title>
<indexterm zone="AppstreamSearchQuery"><primary sortas="SearchQuery">AppstreamSearchQuery</primary></indexterm>
<programlisting>struct AppstreamSearchQuery {
	GObject parent_instance;
	AppstreamSearchQueryPrivate * priv;
};
</programlisting>
<para>
Class describing a query on the AppStream application database
</para></refsect2>
<refsect2 id="AppstreamSearchQueryClass" role="struct">
<title>struct AppstreamSearchQueryClass</title>
<indexterm zone="AppstreamSearchQueryClass"><primary sortas="SearchQueryClass">AppstreamSearchQueryClass</primary></indexterm>
<programlisting>struct AppstreamSearchQueryClass {
	GObjectClass parent_class;
};
</programlisting>
<para>
The class structure for <link linkend="APPSTREAM-TYPE-SEARCH-QUERY:CAPS"><literal>APPSTREAM_TYPE_SEARCH_QUERY</literal></link>. All the fields in this structure are private and should never be accessed directly.
</para><variablelist role="struct">
<varlistentry><term><link linkend="GObjectClass"><type>GObjectClass</type></link>&#160;<structfield id="AppstreamSearchQueryClass.parent-class">parent_class</structfield>;</term>
<listitem><simpara>the parent class structure</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="APPSTREAM-TYPE-DATABASE:CAPS" role="macro">
<title>APPSTREAM_TYPE_DATABASE</title>
<indexterm zone="APPSTREAM-TYPE-DATABASE:CAPS"><primary sortas="TYPE_DATABASE">APPSTREAM_TYPE_DATABASE</primary></indexterm>
<programlisting>#define APPSTREAM_TYPE_DATABASE (appstream_database_get_type ())
</programlisting>
<para>
The type for <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link>.
</para></refsect2>
<refsect2 id="appstream-database-open" role="function">
<title>appstream_database_open ()</title>
<indexterm zone="appstream-database-open"><primary sortas="database_open">appstream_database_open</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            appstream_database_open             (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-db-exists" role="function">
<title>appstream_database_db_exists ()</title>
<indexterm zone="appstream-database-db-exists"><primary sortas="database_db_exists">appstream_database_db_exists</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            appstream_database_db_exists        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>TRUE if the application database exists</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-get-all-applications" role="function">
<title>appstream_database_get_all_applications ()</title>
<indexterm zone="appstream-database-get-all-applications"><primary sortas="database_get_all_applications">appstream_database_get_all_applications</primary></indexterm>
<programlisting><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link> *         appstream_database_get_all_applications
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-find-applications" role="function">
<title>appstream_database_find_applications ()</title>
<indexterm zone="appstream-database-find-applications"><primary sortas="database_find_applications">appstream_database_find_applications</primary></indexterm>
<programlisting><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link> *         appstream_database_find_applications
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter><link linkend="AppstreamSearchQuery"><type>AppstreamSearchQuery</type></link> *query</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-find-applications-by-str" role="function">
<title>appstream_database_find_applications_by_str ()</title>
<indexterm zone="appstream-database-find-applications-by-str"><primary sortas="database_find_applications_by_str">appstream_database_find_applications_by_str</primary></indexterm>
<programlisting><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link> *         appstream_database_find_applications_by_str
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *search_str</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>search_str</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
<varlistentry><term><parameter>categories_str</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-refresh" role="function">
<title>appstream_database_refresh ()</title>
<indexterm zone="appstream-database-refresh"><primary sortas="database_refresh">appstream_database_refresh</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_database_refresh          (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter><link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link> _callback_</parameter>,
                                                         <parameter><link linkend="gpointer"><type>gpointer</type></link> _user_data_</parameter>);</programlisting>
<para>
Make a DBus call telling the system to refresh the internal database of available applications. AppStream uses the metadata provided by your distributor to regenerate the database.
</para>
<para>
<emphasis>See also</emphasis>: <link linkend="appstream-database-refresh-finish"><function><link linkend="appstream-database-refresh-finish"><function>appstream_database_refresh_finish()</function></link></function></link>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>_callback_</parameter>&#160;:</term>
<listitem><simpara>callback to call when the request is satisfied. <emphasis role="annotation">[<acronym>scope async</acronym>]</emphasis></simpara></listitem></varlistentry>
<varlistentry><term><parameter>_user_data_</parameter>&#160;:</term>
<listitem><simpara>the data to pass to <parameter>_callback_</parameter> function. <emphasis role="annotation">[<acronym>closure</acronym>]</emphasis></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-refresh-finish" role="function">
<title>appstream_database_refresh_finish ()</title>
<indexterm zone="appstream-database-refresh-finish"><primary sortas="database_refresh_finish">appstream_database_refresh_finish</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            appstream_database_refresh_finish   (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>,
                                                         <parameter><link linkend="GAsyncResult"><type>GAsyncResult</type></link> *_res_</parameter>,
                                                         <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>
Make a DBus call telling the system to refresh the internal database of available applications. AppStream uses the metadata provided by your distributor to regenerate the database.
</para>
<para>
<emphasis>See also</emphasis>: <link linkend="appstream-database-refresh"><function><link linkend="appstream-database-refresh"><function>appstream_database_refresh()</function></link></function></link>
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>_res_</parameter>&#160;:</term>
<listitem><simpara>a <link linkend="GAsyncResult"><type>GAsyncResult</type></link></simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara>location to store the error occuring, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. <emphasis role="annotation">[<acronym>error-domains</acronym> GIOErrorEnum]</emphasis></simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>TRUE if refresh was successfull.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-database-new" role="function">
<title>appstream_database_new ()</title>
<indexterm zone="appstream-database-new"><primary sortas="database_new">appstream_database_new</primary></indexterm>
<programlisting><link linkend="AppstreamDatabase"><returnvalue>AppstreamDatabase</returnvalue></link> * appstream_database_new              (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="appstream-database-get-database-path" role="function">
<title>appstream_database_get_database_path ()</title>
<indexterm zone="appstream-database-get-database-path"><primary sortas="database_get_database_path">appstream_database_get_database_path</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       appstream_database_get_database_path
                                                        (<parameter><link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> *self</parameter>);</programlisting>
<para>
Get and return the current value of the <link linkend="AppstreamDatabase--database-path"><type>"database-path"</type></link> property.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamDatabase"><type>AppstreamDatabase</type></link> instance to query</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the value of the <link linkend="AppstreamDatabase--database-path"><type>"database-path"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AppstreamDatabase" role="struct">
<title>struct AppstreamDatabase</title>
<indexterm zone="AppstreamDatabase"><primary sortas="Database">AppstreamDatabase</primary></indexterm>
<programlisting>struct AppstreamDatabase {
	GObject parent_instance;
	AppstreamDatabasePrivate * priv;
};
</programlisting>
<para>
Class to access the AppStream application database
</para></refsect2>
<refsect2 id="AppstreamDatabaseClass" role="struct">
<title>struct AppstreamDatabaseClass</title>
<indexterm zone="AppstreamDatabaseClass"><primary sortas="DatabaseClass">AppstreamDatabaseClass</primary></indexterm>
<programlisting>struct AppstreamDatabaseClass {
	GObjectClass parent_class;
	gboolean (*open) (AppstreamDatabase* self);
};
</programlisting>
<para>
The class structure for <link linkend="APPSTREAM-TYPE-DATABASE:CAPS"><literal>APPSTREAM_TYPE_DATABASE</literal></link>. All the fields in this structure are private and should never be accessed directly.
</para><variablelist role="struct">
<varlistentry><term><link linkend="GObjectClass"><type>GObjectClass</type></link>&#160;<structfield id="AppstreamDatabaseClass.parent-class">parent_class</structfield>;</term>
<listitem><simpara>the parent class structure</simpara></listitem>
</varlistentry>
<varlistentry><term><structfield id="AppstreamDatabaseClass.open">open</structfield>&#160;()</term>
<listitem><simpara>virtual method called by <link linkend="appstream-database-open"><function><link linkend="appstream-database-open"><function>appstream_database_open()</function></link></function></link></simpara></listitem>
</varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
