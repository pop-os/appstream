<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="AsSearchQuery">
<refmeta>
<refentrytitle role="top_of_page" id="AsSearchQuery.top_of_page">AsSearchQuery</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  APPSTREAM Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AsSearchQuery</refname>
<refpurpose>An Appstream database search query</refpurpose>
</refnamediv>

<refsect1 id="AsSearchQuery.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="AsSearchQuery"><returnvalue>AsSearchQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-search-query-new">as_search_query_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="AsSearchQuery"><returnvalue>AsSearchQuery</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-search-query-construct">as_search_query_construct</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-search-query-set-search-term">as_search_query_set_search_term</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-search-query-get-search-all-categories">as_search_query_get_search_all_categories</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-search-query-get-categories">as_search_query_get_categories</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-search-query-set-search-all-categories">as_search_query_set_search_all_categories</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-search-query-set-categories">as_search_query_set_categories</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-search-query-set-categories-from-string">as_search_query_set_categories_from_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-search-query-sanitize-search-term">as_search_query_sanitize_search_term</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-search-query-get-search-term">as_search_query_get_search_term</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="AsSearchQuery.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="GStrv"><type>GStrv</type></link></entry><entry role="property_name"><link linkend="AsSearchQuery--categories">categories</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsSearchQuery--search-term">search-term</link></entry><entry role="property_flags">Read / Write</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="AsSearchQuery.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> AsSearchQuery
</screen>
</refsect1>

<refsect1 id="AsSearchQuery.includes"><title>Includes</title><synopsis>#include &lt;appstream.h&gt;
</synopsis></refsect1>

<refsect1 id="AsSearchQuery.description" role="desc">
<title role="desc.title">Description</title>
<para>This object defines a search run in the Appstream components database.
It contains a string to search for, as well as information which
categories should be searched.
It also applies some sanity checks and improvements to the entered search string.</para>
<para>See also: <link linkend="AsDatabase"><type>AsDatabase</type></link></para>

</refsect1>
<refsect1 id="AsSearchQuery.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="as-search-query-new" role="function">
<title>as_search_query_new&#160;()</title>
<indexterm zone="as-search-query-new"><primary>as_search_query_new</primary></indexterm>
<programlisting language="C"><link linkend="AsSearchQuery"><returnvalue>AsSearchQuery</returnvalue></link>&#160;*
as_search_query_new (<parameter>const <link linkend="gchar"><type>gchar</type></link> *term</parameter>);</programlisting>
<para>Creates a new <link linkend="AsSearchQuery"><type>AsSearchQuery</type></link>.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> a new <link linkend="AsSearchQuery"><type>AsSearchQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-search-query-construct" role="function">
<title>as_search_query_construct&#160;()</title>
<indexterm zone="as-search-query-construct"><primary>as_search_query_construct</primary></indexterm>
<programlisting language="C"><link linkend="AsSearchQuery"><returnvalue>AsSearchQuery</returnvalue></link>&#160;*
as_search_query_construct (<parameter><link linkend="GType"><type>GType</type></link> object_type</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *term</parameter>);</programlisting>
<para>Construct a new <link linkend="AsSearchQuery"><type>AsSearchQuery</type></link>.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> a new <link linkend="AsSearchQuery"><type>AsSearchQuery</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-search-query-set-search-term" role="function">
<title>as_search_query_set_search_term&#160;()</title>
<indexterm zone="as-search-query-set-search-term"><primary>as_search_query_set_search_term</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_search_query_set_search_term (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set the search-term we use for the search. Multiple terms may be
comma-separated.
You can use Xapian prefixes, such as "XP" to refine your search.</para>
</refsect2>
<refsect2 id="as-search-query-get-search-all-categories" role="function">
<title>as_search_query_get_search_all_categories&#160;()</title>
<indexterm zone="as-search-query-get-search-all-categories"><primary>as_search_query_get_search_all_categories</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_search_query_get_search_all_categories
                               (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>);</programlisting>
<refsect3 role="returns">
<title>Returns</title>
<para> TRUE if we search in all categories</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-search-query-get-categories" role="function">
<title>as_search_query_get_categories&#160;()</title>
<indexterm zone="as-search-query-get-categories"><primary>as_search_query_get_categories</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_search_query_get_categories (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>);</programlisting>
<refsect3 role="returns">
<title>Returns</title>
<para> String array of categories. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-search-query-set-search-all-categories" role="function">
<title>as_search_query_set_search_all_categories&#160;()</title>
<indexterm zone="as-search-query-set-search-all-categories"><primary>as_search_query_set_search_all_categories</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_search_query_set_search_all_categories
                               (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>);</programlisting>
<para>Shortcut to set that we should search in all categories</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>A valid <link linkend="AsSearchQuery"><type>AsSearchQuery</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-search-query-set-categories" role="function">
<title>as_search_query_set_categories&#160;()</title>
<indexterm zone="as-search-query-set-categories"><primary>as_search_query_set_categories</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_search_query_set_categories (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>,
                                <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-search-query-set-categories-from-string" role="function">
<title>as_search_query_set_categories_from_string&#160;()</title>
<indexterm zone="as-search-query-set-categories-from-string"><primary>as_search_query_set_categories_from_string</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_search_query_set_categories_from_string
                               (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>);</programlisting>
<para>Set the categories list from a string</para>
<para><parameter>categories_str</parameter>
 Semicolon-separated list of category-names</para>
</refsect2>
<refsect2 id="as-search-query-sanitize-search-term" role="function">
<title>as_search_query_sanitize_search_term&#160;()</title>
<indexterm zone="as-search-query-sanitize-search-term"><primary>as_search_query_sanitize_search_term</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_search_query_sanitize_search_term (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-search-query-get-search-term" role="function">
<title>as_search_query_get_search_term&#160;()</title>
<indexterm zone="as-search-query-get-search-term"><primary>as_search_query_get_search_term</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_search_query_get_search_term (<parameter><link linkend="AsSearchQuery"><type>AsSearchQuery</type></link> *self</parameter>);</programlisting>
<para>Returns the search-term we currently use</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="AsSearchQuery.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>
<refsect1 id="AsSearchQuery.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="AsSearchQuery--categories" role="property"><title>The <literal>“categories”</literal> property</title>
<indexterm zone="AsSearchQuery--categories"><primary>AsSearchQuery:categories</primary></indexterm>
<programlisting>  “categories”               <link linkend="GStrv"><type>GStrv</type></link></programlisting>
<para>categories.</para><para>Flags: Read / Write</para>
</refsect2>
<refsect2 id="AsSearchQuery--search-term" role="property"><title>The <literal>“search-term”</literal> property</title>
<indexterm zone="AsSearchQuery--search-term"><primary>AsSearchQuery:search-term</primary></indexterm>
<programlisting>  “search-term”              <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>search-term.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>

</refsect1>

</refentry>
