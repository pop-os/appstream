<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="appstream-AppstreamScreenshot">
<refmeta>
<refentrytitle role="top_of_page" id="appstream-AppstreamScreenshot.top_of_page">AppstreamScreenshot</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  APPSTREAM Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AppstreamScreenshot</refname>
<refpurpose>Class to store data describing a screenshot</refpurpose>
</refnamediv>

<refsynopsisdiv id="appstream-AppstreamScreenshot.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>#define             <link linkend="APPSTREAM-TYPE-SCREENSHOT:CAPS">APPSTREAM_TYPE_SCREENSHOT</link>
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="appstream-screenshot-get-url-for-size">appstream_screenshot_get_url_for_size</link>
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="appstream-screenshot-get-thumbnail-url-for-size">appstream_screenshot_get_thumbnail_url_for_size</link>
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> **            <link linkend="appstream-screenshot-get-available-sizes">appstream_screenshot_get_available_sizes</link>
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> **            <link linkend="appstream-screenshot-get-available-thumbnail-sizes">appstream_screenshot_get_available_thumbnail_sizes</link>
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-screenshot-add-url">appstream_screenshot_add_url</link>        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-screenshot-add-thumbnail-url">appstream_screenshot_add_thumbnail_url</link>
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="appstream-screenshot-is-default">appstream_screenshot_is_default</link>     (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-screenshot-set-default">appstream_screenshot_set_default</link>    (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> b</parameter>);
<link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            <link linkend="appstream-screenshot-is-valid">appstream_screenshot_is_valid</link>       (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);
<link linkend="AppstreamScreenshot"><returnvalue>AppstreamScreenshot</returnvalue></link> * <link linkend="appstream-screenshot-new">appstream_screenshot_new</link>          (<parameter><type>void</type></parameter>);
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="appstream-screenshot-get-caption">appstream_screenshot_get_caption</link>    (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="appstream-screenshot-set-caption">appstream_screenshot_set_caption</link>    (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
struct              <link linkend="AppstreamScreenshot">AppstreamScreenshot</link>;
struct              <link linkend="AppstreamScreenshotClass">AppstreamScreenshotClass</link>;
</synopsis>
</refsynopsisdiv>

<refsect1 id="appstream-AppstreamScreenshot.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="appstream-AppstreamScreenshot.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="APPSTREAM-TYPE-SCREENSHOT:CAPS" role="macro">
<title>APPSTREAM_TYPE_SCREENSHOT</title>
<indexterm zone="APPSTREAM-TYPE-SCREENSHOT:CAPS"><primary sortas="TYPE_SCREENSHOT">APPSTREAM_TYPE_SCREENSHOT</primary></indexterm>
<programlisting>#define APPSTREAM_TYPE_SCREENSHOT (appstream_screenshot_get_type ())
</programlisting>
<para>
The type for <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link>.
</para></refsect2>
<refsect2 id="appstream-screenshot-get-url-for-size" role="function">
<title>appstream_screenshot_get_url_for_size ()</title>
<indexterm zone="appstream-screenshot-get-url-for-size"><primary sortas="screenshot_get_url_for_size">appstream_screenshot_get_url_for_size</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             appstream_screenshot_get_url_for_size
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>);</programlisting>
<para>
Returns a screenshot url for the given size. Returns NULL if no url exists for the given size.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size_id</parameter>&#160;:</term>
<listitem><simpara>&nbsp;.  a screenshot size, like &quot;800x600&quot;, &quot;1400x1600&quot; etc. <emphasis role="annotation">[<acronym>in</acronym>]</emphasis></simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>url of the screenshot as string</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-get-thumbnail-url-for-size" role="function">
<title>appstream_screenshot_get_thumbnail_url_for_size ()</title>
<indexterm zone="appstream-screenshot-get-thumbnail-url-for-size"><primary sortas="screenshot_get_thumbnail_url_for_size">appstream_screenshot_get_thumbnail_url_for_size</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             appstream_screenshot_get_thumbnail_url_for_size
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>);</programlisting>
<para>
Returns a thumbnail url for the given size. Returns NULL if no url exists for the given size.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size_id</parameter>&#160;:</term>
<listitem><simpara>&nbsp;.  a thumbnail size, like &quot;800x600&quot;, &quot;1400x1600&quot; etc. <emphasis role="annotation">[<acronym>in</acronym>]</emphasis></simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>url of the thumbnail image as string</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-get-available-sizes" role="function">
<title>appstream_screenshot_get_available_sizes ()</title>
<indexterm zone="appstream-screenshot-get-available-sizes"><primary sortas="screenshot_get_available_sizes">appstream_screenshot_get_available_sizes</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> **            appstream_screenshot_get_available_sizes
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);</programlisting>
<para>
Returns a list of available screenshot sizes.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>zero-terminated string array of available sizes. <emphasis role="annotation">[<acronym>array</acronym> length=result_length1]</emphasis></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-get-available-thumbnail-sizes" role="function">
<title>appstream_screenshot_get_available_thumbnail_sizes ()</title>
<indexterm zone="appstream-screenshot-get-available-thumbnail-sizes"><primary sortas="screenshot_get_available_thumbnail_sizes">appstream_screenshot_get_available_thumbnail_sizes</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> **            appstream_screenshot_get_available_thumbnail_sizes
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);</programlisting>
<para>
Returns a list of available thumbnail sizes.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>zero-terminated string array of available sizes. <emphasis role="annotation">[<acronym>array</acronym> length=result_length1]</emphasis></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-add-url" role="function">
<title>appstream_screenshot_add_url ()</title>
<indexterm zone="appstream-screenshot-add-url"><primary sortas="screenshot_add_url">appstream_screenshot_add_url</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_screenshot_add_url        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size_id</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-add-thumbnail-url" role="function">
<title>appstream_screenshot_add_thumbnail_url ()</title>
<indexterm zone="appstream-screenshot-add-thumbnail-url"><primary sortas="screenshot_add_thumbnail_url">appstream_screenshot_add_thumbnail_url</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_screenshot_add_thumbnail_url
                                                        (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *size_id</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size_id</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
<varlistentry><term><parameter>url</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-is-default" role="function">
<title>appstream_screenshot_is_default ()</title>
<indexterm zone="appstream-screenshot-is-default"><primary sortas="screenshot_is_default">appstream_screenshot_is_default</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            appstream_screenshot_is_default     (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>TRUE if the screenshot is the default screenshot for this application</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-set-default" role="function">
<title>appstream_screenshot_set_default ()</title>
<indexterm zone="appstream-screenshot-set-default"><primary sortas="screenshot_set_default">appstream_screenshot_set_default</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_screenshot_set_default    (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter><link linkend="gboolean"><type>gboolean</type></link> b</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
<varlistentry><term><parameter>b</parameter>&#160;:</term>
<listitem><simpara>&nbsp;</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-is-valid" role="function">
<title>appstream_screenshot_is_valid ()</title>
<indexterm zone="appstream-screenshot-is-valid"><primary sortas="screenshot_is_valid">appstream_screenshot_is_valid</primary></indexterm>
<programlisting><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>            appstream_screenshot_is_valid       (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);</programlisting>
<para>
Sanity check to see if we have a valid screenshot object here.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-new" role="function">
<title>appstream_screenshot_new ()</title>
<indexterm zone="appstream-screenshot-new"><primary sortas="screenshot_new">appstream_screenshot_new</primary></indexterm>
<programlisting><link linkend="AppstreamScreenshot"><returnvalue>AppstreamScreenshot</returnvalue></link> * appstream_screenshot_new          (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="appstream-screenshot-get-caption" role="function">
<title>appstream_screenshot_get_caption ()</title>
<indexterm zone="appstream-screenshot-get-caption"><primary sortas="screenshot_get_caption">appstream_screenshot_get_caption</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       appstream_screenshot_get_caption    (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>);</programlisting>
<para>
Get and return the current value of the <link linkend="AppstreamScreenshot--caption"><type>"caption"</type></link> property.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance to query</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the value of the <link linkend="AppstreamScreenshot--caption"><type>"caption"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="appstream-screenshot-set-caption" role="function">
<title>appstream_screenshot_set_caption ()</title>
<indexterm zone="appstream-screenshot-set-caption"><primary sortas="screenshot_set_caption">appstream_screenshot_set_caption</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                appstream_screenshot_set_caption    (<parameter><link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> *self</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Set the value of the <link linkend="AppstreamScreenshot--caption"><type>"caption"</type></link> property to <parameter>value</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>self</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AppstreamScreenshot"><type>AppstreamScreenshot</type></link> instance to modify</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>the new value of the <link linkend="AppstreamScreenshot--caption"><type>"caption"</type></link> property</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AppstreamScreenshot" role="struct">
<title>struct AppstreamScreenshot</title>
<indexterm zone="AppstreamScreenshot"><primary sortas="Screenshot">AppstreamScreenshot</primary></indexterm>
<programlisting>struct AppstreamScreenshot {
	GObject parent_instance;
	AppstreamScreenshotPrivate * priv;
	GHashTable* urls;
	GHashTable* thumbnail_urls;
};
</programlisting>
<para>
Class to store data describing a screenshot
</para></refsect2>
<refsect2 id="AppstreamScreenshotClass" role="struct">
<title>struct AppstreamScreenshotClass</title>
<indexterm zone="AppstreamScreenshotClass"><primary sortas="ScreenshotClass">AppstreamScreenshotClass</primary></indexterm>
<programlisting>struct AppstreamScreenshotClass {
	GObjectClass parent_class;
};
</programlisting>
<para>
The class structure for <link linkend="APPSTREAM-TYPE-SCREENSHOT:CAPS"><literal>APPSTREAM_TYPE_SCREENSHOT</literal></link>. All the fields in this structure are private and should never be accessed directly.
</para><variablelist role="struct">
<varlistentry><term><link linkend="GObjectClass"><type>GObjectClass</type></link>&#160;<structfield id="AppstreamScreenshotClass.parent-class">parent_class</structfield>;</term>
<listitem><simpara>the parent class structure</simpara></listitem>
</varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
