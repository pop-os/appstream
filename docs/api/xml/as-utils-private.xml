<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="appstream-as-utils-private">
<refmeta>
<refentrytitle role="top_of_page" id="appstream-as-utils-private.top_of_page">as-utils-private</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>APPSTREAM Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>as-utils-private</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="appstream-as-utils-private.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-utils-delete-dir-recursive">as_utils_delete_dir_recursive</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-utils-categories-from-strv">as_utils_categories_from_strv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-utils-categories-from-str">as_utils_categories_from_str</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-utils-find-files-matching">as_utils_find_files_matching</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-utils-find-files">as_utils_find_files</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-utils-is-root">as_utils_is_root</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-utils-is-writable">as_utils_is_writable</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-str-replace">as_str_replace</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-ptr-array-to-strv">as_ptr_array_to_strv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-touch-location">as_touch_location</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-copy-file">as_copy_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-reset-umask">as_reset_umask</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-is-cruft-locale">as_is_cruft_locale</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-locale-strip-encoding">as_locale_strip_encoding</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-get-current-arch">as_get_current_arch</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-arch-compatible">as_arch_compatible</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="appstream-as-utils-private.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>

</refsect1>
<refsect1 id="appstream-as-utils-private.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="as-utils-delete-dir-recursive" role="function">
<title>as_utils_delete_dir_recursive&#160;()</title>
<indexterm zone="as-utils-delete-dir-recursive"><primary>as_utils_delete_dir_recursive</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_utils_delete_dir_recursive (<parameter>const <link linkend="gchar"><type>gchar</type></link> *dirname</parameter>);</programlisting>
<para>Remove directory and all its children (like rm -r does).</para>
<refsect3 id="as-utils-delete-dir-recursive.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>dirname</para></entry>
<entry role="parameter_description"><para>Directory to remove</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="as-utils-delete-dir-recursive.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if operation was successful</para>
</refsect3></refsect2>
<refsect2 id="as-utils-categories-from-strv" role="function">
<title>as_utils_categories_from_strv&#160;()</title>
<indexterm zone="as-utils-categories-from-strv"><primary>as_utils_categories_from_strv</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_utils_categories_from_strv (<parameter><link linkend="gchar"><type>gchar</type></link> **categories_strv</parameter>,
                               <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *system_categories</parameter>);</programlisting>
<para>Create a list of categories from string array</para>
<refsect3 id="as-utils-categories-from-strv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>categories_strv</para></entry>
<entry role="parameter_description"><para>a string array</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>system_categories</para></entry>
<entry role="parameter_description"><para>list of <link linkend="AsCategory"><type>AsCategory</type></link> objects available on this system</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="as-utils-categories-from-strv.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GPtrArray"><type>GPtrArray</type></link> of <link linkend="AsCategory"><type>AsCategory</type></link> objects matching the strings in the array. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> AsCategory][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-utils-categories-from-str" role="function">
<title>as_utils_categories_from_str&#160;()</title>
<indexterm zone="as-utils-categories-from-str"><primary>as_utils_categories_from_str</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_utils_categories_from_str (<parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>,
                              <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *system_categories</parameter>);</programlisting>
<para>Create a list of categories from semicolon-separated string</para>
<refsect3 id="as-utils-categories-from-str.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>categories_str</para></entry>
<entry role="parameter_description"><para>string with semicolon-separated categories</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>system_categories</para></entry>
<entry role="parameter_description"><para>list of <link linkend="AsCategory"><type>AsCategory</type></link> objects available on this system</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="as-utils-categories-from-str.returns" role="returns">
<title>Returns</title>
<para> <link linkend="GPtrArray"><type>GPtrArray</type></link> of <link linkend="AsCategory"><type>AsCategory</type></link> objcts matching the strings in the array. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> AsCategory][<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-utils-find-files-matching" role="function">
<title>as_utils_find_files_matching&#160;()</title>
<indexterm zone="as-utils-find-files-matching"><primary>as_utils_find_files_matching</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_utils_find_files_matching (<parameter>const <link linkend="gchar"><type>gchar</type></link> *dir</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *pattern</parameter>,
                              <parameter><link linkend="gboolean"><type>gboolean</type></link> recursive</parameter>,
                              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-utils-find-files" role="function">
<title>as_utils_find_files&#160;()</title>
<indexterm zone="as-utils-find-files"><primary>as_utils_find_files</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_utils_find_files (<parameter>const <link linkend="gchar"><type>gchar</type></link> *dir</parameter>,
                     <parameter><link linkend="gboolean"><type>gboolean</type></link> recursive</parameter>,
                     <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-utils-is-root" role="function">
<title>as_utils_is_root&#160;()</title>
<indexterm zone="as-utils-is-root"><primary>as_utils_is_root</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_utils_is_root (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="as-utils-is-writable" role="function">
<title>as_utils_is_writable&#160;()</title>
<indexterm zone="as-utils-is-writable"><primary>as_utils_is_writable</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_utils_is_writable (<parameter>const <link linkend="gchar"><type>gchar</type></link> *path</parameter>);</programlisting>
<para>Checks if a path is writable.</para>
<refsect3 id="as-utils-is-writable.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>the path to check.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-str-replace" role="function">
<title>as_str_replace&#160;()</title>
<indexterm zone="as-str-replace"><primary>as_str_replace</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_str_replace (<parameter>const <link linkend="gchar"><type>gchar</type></link> *str</parameter>,
                <parameter>const <link linkend="gchar"><type>gchar</type></link> *old_str</parameter>,
                <parameter>const <link linkend="gchar"><type>gchar</type></link> *new_str</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-ptr-array-to-strv" role="function">
<title>as_ptr_array_to_strv&#160;()</title>
<indexterm zone="as-ptr-array-to-strv"><primary>as_ptr_array_to_strv</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_ptr_array_to_strv (<parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *array</parameter>);</programlisting>
<refsect3 id="as-ptr-array-to-strv.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>array</para></entry>
<entry role="parameter_description"><para>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>element-type</acronym> utf8]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="as-ptr-array-to-strv.returns" role="returns">
<title>Returns</title>
<para> strv of the string array. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-touch-location" role="function">
<title>as_touch_location&#160;()</title>
<indexterm zone="as-touch-location"><primary>as_touch_location</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_touch_location (<parameter>const <link linkend="gchar"><type>gchar</type></link> *fname</parameter>);</programlisting>
<para>Change mtime of a filesystem location.</para>
<refsect3 id="as-touch-location.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>fname</para></entry>
<entry role="parameter_description"><para>The file or directory to touch.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-copy-file" role="function">
<title>as_copy_file&#160;()</title>
<indexterm zone="as-copy-file"><primary>as_copy_file</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_copy_file (<parameter>const <link linkend="gchar"><type>gchar</type></link> *source</parameter>,
              <parameter>const <link linkend="gchar"><type>gchar</type></link> *destination</parameter>,
              <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Copy a file.</para>
</refsect2>
<refsect2 id="as-reset-umask" role="function">
<title>as_reset_umask&#160;()</title>
<indexterm zone="as-reset-umask"><primary>as_reset_umask</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_reset_umask (<parameter><type>void</type></parameter>);</programlisting>
<para>Reset umask potentially set by the user to a default value,
so we can create files with the correct permissions.</para>
</refsect2>
<refsect2 id="as-is-cruft-locale" role="function">
<title>as_is_cruft_locale&#160;()</title>
<indexterm zone="as-is-cruft-locale"><primary>as_is_cruft_locale</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_is_cruft_locale (<parameter>const <link linkend="gchar"><type>gchar</type></link> *locale</parameter>);</programlisting>
<para>Checks whether the given locale is valid or a cruft or dummy
locale.</para>
</refsect2>
<refsect2 id="as-locale-strip-encoding" role="function">
<title>as_locale_strip_encoding&#160;()</title>
<indexterm zone="as-locale-strip-encoding"><primary>as_locale_strip_encoding</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_locale_strip_encoding (<parameter><link linkend="gchar"><type>gchar</type></link> *locale</parameter>);</programlisting>
<para>Remove the encoding from a locale string.
The function modifies the string directly.</para>
</refsect2>
<refsect2 id="as-get-current-arch" role="function">
<title>as_get_current_arch&#160;()</title>
<indexterm zone="as-get-current-arch"><primary>as_get_current_arch</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_get_current_arch (<parameter><type>void</type></parameter>);</programlisting>
<para>Get the current architecture as vendor strings
(e.g. "amd64" instead of "x86_64").</para>
<refsect3 id="as-get-current-arch.returns" role="returns">
<title>Returns</title>
<para> The current OS architecture as string. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-arch-compatible" role="function">
<title>as_arch_compatible&#160;()</title>
<indexterm zone="as-arch-compatible"><primary>as_arch_compatible</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_arch_compatible (<parameter>const <link linkend="gchar"><type>gchar</type></link> *arch1</parameter>,
                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *arch2</parameter>);</programlisting>
<para>Compares two architectures and returns <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if they are compatible.</para>
<refsect3 id="as-arch-compatible.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>arch1</para></entry>
<entry role="parameter_description"><para>Architecture 1</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>arch2</para></entry>
<entry role="parameter_description"><para>Architecture 2</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="appstream-as-utils-private.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>

</refentry>
