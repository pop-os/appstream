<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="appstream-as-provides">
<refmeta>
<refentrytitle role="top_of_page" id="appstream-as-provides.top_of_page">as-provides</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  APPSTREAM Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>as-provides</refname>
<refpurpose>Description of the provides-types of components</refpurpose>
</refnamediv>

<refsynopsisdiv id="appstream-as-provides.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#include &lt;appstream.h&gt;

enum                <link linkend="AsProvidesKind">AsProvidesKind</link>;
const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       <link linkend="as-provides-kind-to-string">as_provides_kind_to_string</link>          (<parameter><link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> kind</parameter>);
<link linkend="AsProvidesKind"><returnvalue>AsProvidesKind</returnvalue></link>      <link linkend="as-provides-kind-from-string">as_provides_kind_from_string</link>        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *kind_str</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="as-provides-item-create">as_provides_item_create</link>             (<parameter><link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> kind</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);
<link linkend="AsProvidesKind"><returnvalue>AsProvidesKind</returnvalue></link>      <link linkend="as-provides-item-get-kind">as_provides_item_get_kind</link>           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *item</parameter>);
<link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             <link linkend="as-provides-item-get-value">as_provides_item_get_value</link>          (<parameter>const <link linkend="gchar"><type>gchar</type></link> *item</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="appstream-as-provides.description" role="desc">
<title role="desc.title">Description</title>
<para>
Components can provide various items, like libraries, Python-modules,
firmware, binaries, etc.
Functions to work with these items are provided here.
</para>
<para>
See also: <link linkend="AsComponent"><type>AsComponent</type></link>
</para>
</refsect1>
<refsect1 id="appstream-as-provides.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AsProvidesKind" role="enum">
<title>enum AsProvidesKind</title>
<indexterm zone="AsProvidesKind"><primary>AsProvidesKind</primary></indexterm>
<programlisting>typedef enum {
	AS_PROVIDES_KIND_UNKNOWN,
	AS_PROVIDES_KIND_LIBRARY,
	AS_PROVIDES_KIND_BINARY,
	AS_PROVIDES_KIND_FONT,
	AS_PROVIDES_KIND_MODALIAS,
	AS_PROVIDES_KIND_FIRMWARE,
	AS_PROVIDES_KIND_PYTHON2,
	AS_PROVIDES_KIND_PYTHON3,
	AS_PROVIDES_KIND_LAST
} AsProvidesKind;
</programlisting>
<para>
</para><variablelist role="enum">
<varlistentry id="AS-PROVIDES-KIND-UNKNOWN:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_UNKNOWN</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-LIBRARY:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_LIBRARY</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-BINARY:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_BINARY</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-FONT:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_FONT</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-MODALIAS:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_MODALIAS</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-FIRMWARE:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_FIRMWARE</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-PYTHON2:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_PYTHON2</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-PYTHON3:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_PYTHON3</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry id="AS-PROVIDES-KIND-LAST:CAPS" role="constant">
<term><literal>AS_PROVIDES_KIND_LAST</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="as-provides-kind-to-string" role="function">
<title>as_provides_kind_to_string ()</title>
<indexterm zone="as-provides-kind-to-string"><primary>as_provides_kind_to_string</primary></indexterm>
<programlisting>const <link linkend="gchar"><returnvalue>gchar</returnvalue></link> *       as_provides_kind_to_string          (<parameter><link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> kind</parameter>);</programlisting>
<para>
Converts the enumerated value to an text representation.
</para><variablelist role="params">
<varlistentry><term><parameter>kind</parameter>&#160;:</term>
<listitem><simpara>the <link linkend="AsProvidesKind"><type>AsProvidesKind</type></link>.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>string version of <parameter>kind</parameter></simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="as-provides-kind-from-string" role="function">
<title>as_provides_kind_from_string ()</title>
<indexterm zone="as-provides-kind-from-string"><primary>as_provides_kind_from_string</primary></indexterm>
<programlisting><link linkend="AsProvidesKind"><returnvalue>AsProvidesKind</returnvalue></link>      as_provides_kind_from_string        (<parameter>const <link linkend="gchar"><type>gchar</type></link> *kind_str</parameter>);</programlisting>
<para>
Converts the text representation to an enumerated value.
</para><variablelist role="params">
<varlistentry><term><parameter>kind_str</parameter>&#160;:</term>
<listitem><simpara>the string.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a <link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> or <link linkend="AS-PROVIDES-KIND-UNKNOWN:CAPS"><literal>AS_PROVIDES_KIND_UNKNOWN</literal></link> for unknown</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="as-provides-item-create" role="function">
<title>as_provides_item_create ()</title>
<indexterm zone="as-provides-item-create"><primary>as_provides_item_create</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             as_provides_item_create             (<parameter><link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> kind</parameter>,
                                                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
Creates a new provides-item string, which
consists of a type-part describing the items type, and a name-part,
containing the name of the item. Both are separated by a semicolon,
so an item of type KIND_LIBRARY and name libappstream.so.0 will become
"lib;libappstream.so.0"
</para>
<para>
<parameter>kind</parameter> a <link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> describing the type of the item string
<parameter>value</parameter> the name of the item as string
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>a new provides-item string. Free with g_free</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="as-provides-item-get-kind" role="function">
<title>as_provides_item_get_kind ()</title>
<indexterm zone="as-provides-item-get-kind"><primary>as_provides_item_get_kind</primary></indexterm>
<programlisting><link linkend="AsProvidesKind"><returnvalue>AsProvidesKind</returnvalue></link>      as_provides_item_get_kind           (<parameter>const <link linkend="gchar"><type>gchar</type></link> *item</parameter>);</programlisting>
<para>
Returns the type (kind) of a provides-item string
as <link linkend="AsProvidesKind"><type>AsProvidesKind</type></link>
</para>
<para>
<parameter>item</parameter> a valid provides-item string
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the kind of the given item</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="as-provides-item-get-value" role="function">
<title>as_provides_item_get_value ()</title>
<indexterm zone="as-provides-item-get-value"><primary>as_provides_item_get_value</primary></indexterm>
<programlisting><link linkend="gchar"><returnvalue>gchar</returnvalue></link> *             as_provides_item_get_value          (<parameter>const <link linkend="gchar"><type>gchar</type></link> *item</parameter>);</programlisting>
<para>
Returns the value (name) of a provides-item string
</para>
<para>
<parameter>item</parameter> a valid provides-item string
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the value of the given item, or NULL if the item was invalid</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
