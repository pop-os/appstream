<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="appstream-as-yaml">
<refmeta>
<refentrytitle role="top_of_page" id="appstream-as-yaml.top_of_page">as-yaml</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>APPSTREAM Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>as-yaml</refname>
<refpurpose>Helper functions to parse AppStream YAML data</refpurpose>
</refnamediv>

<refsect1 id="appstream-as-yaml.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-parse-layer">as_yaml_parse_layer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-free-node">as_yaml_free_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-yaml-node-get-key">as_yaml_node_get_key</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-yaml-node-get-value">as_yaml_node_get_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-print-unknown">as_yaml_print_unknown</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-mapping-start">as_yaml_mapping_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-mapping-end">as_yaml_mapping_end</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-sequence-start">as_yaml_sequence_start</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-sequence-end">as_yaml_sequence_end</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-scalar">as_yaml_emit_scalar</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-scalar-uint">as_yaml_emit_scalar_uint</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-scalar-key">as_yaml_emit_scalar_key</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-entry">as_yaml_emit_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-entry-uint">as_yaml_emit_entry_uint</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-entry-timestamp">as_yaml_emit_entry_timestamp</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-long-entry">as_yaml_emit_long_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-sequence">as_yaml_emit_sequence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-sequence-from-str-array">as_yaml_emit_sequence_from_str_array</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-localized-strv">as_yaml_emit_localized_strv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GNode"><returnvalue>GNode</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-yaml-get-localized-node">as_yaml_get_localized_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-yaml-get-localized-value">as_yaml_get_localized_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-localized-entry">as_yaml_emit_localized_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-emit-long-localized-entry">as_yaml_emit_long_localized_entry</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-yaml-list-to-str-array">as_yaml_list_to_str_array</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="appstream-as-yaml.includes"><title>Includes</title><synopsis>#include &lt;appstream.h&gt;
</synopsis></refsect1>

<refsect1 id="appstream-as-yaml.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="appstream-as-yaml.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="as-yaml-parse-layer" role="function">
<title>as_yaml_parse_layer&#160;()</title>
<indexterm zone="as-yaml-parse-layer"><primary>as_yaml_parse_layer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_parse_layer (<parameter><link linkend="yaml-parser-t"><type>yaml_parser_t</type></link> *parser</parameter>,
                     <parameter><link linkend="GNode"><type>GNode</type></link> *data</parameter>,
                     <parameter><link linkend="GError"><type>GError</type></link> **error</parameter>);</programlisting>
<para>Create GNode tree from DEP-11 YAML document</para>
</refsect2>
<refsect2 id="as-yaml-free-node" role="function">
<title>as_yaml_free_node&#160;()</title>
<indexterm zone="as-yaml-free-node"><primary>as_yaml_free_node</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_yaml_free_node (<parameter><link linkend="GNode"><type>GNode</type></link> *node</parameter>,
                   <parameter><link linkend="gpointer"><type>gpointer</type></link> data</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-node-get-key" role="function">
<title>as_yaml_node_get_key&#160;()</title>
<indexterm zone="as-yaml-node-get-key"><primary>as_yaml_node_get_key</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_yaml_node_get_key (<parameter><link linkend="GNode"><type>GNode</type></link> *n</parameter>);</programlisting>
<para>Helper method to get the key of a node.</para>
</refsect2>
<refsect2 id="as-yaml-node-get-value" role="function">
<title>as_yaml_node_get_value&#160;()</title>
<indexterm zone="as-yaml-node-get-value"><primary>as_yaml_node_get_value</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_yaml_node_get_value (<parameter><link linkend="GNode"><type>GNode</type></link> *n</parameter>);</programlisting>
<para>Helper method to get the value of a node.</para>
</refsect2>
<refsect2 id="as-yaml-print-unknown" role="function">
<title>as_yaml_print_unknown&#160;()</title>
<indexterm zone="as-yaml-print-unknown"><primary>as_yaml_print_unknown</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_print_unknown (<parameter>const <link linkend="gchar"><type>gchar</type></link> *root</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-mapping-start" role="function">
<title>as_yaml_mapping_start&#160;()</title>
<indexterm zone="as-yaml-mapping-start"><primary>as_yaml_mapping_start</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_mapping_start (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-mapping-end" role="function">
<title>as_yaml_mapping_end&#160;()</title>
<indexterm zone="as-yaml-mapping-end"><primary>as_yaml_mapping_end</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_mapping_end (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-sequence-start" role="function">
<title>as_yaml_sequence_start&#160;()</title>
<indexterm zone="as-yaml-sequence-start"><primary>as_yaml_sequence_start</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_sequence_start (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-sequence-end" role="function">
<title>as_yaml_sequence_end&#160;()</title>
<indexterm zone="as-yaml-sequence-end"><primary>as_yaml_sequence_end</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_sequence_end (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-scalar" role="function">
<title>as_yaml_emit_scalar&#160;()</title>
<indexterm zone="as-yaml-emit-scalar"><primary>as_yaml_emit_scalar</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_scalar (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                     <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-scalar-uint" role="function">
<title>as_yaml_emit_scalar_uint&#160;()</title>
<indexterm zone="as-yaml-emit-scalar-uint"><primary>as_yaml_emit_scalar_uint</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_scalar_uint (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> value</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-scalar-key" role="function">
<title>as_yaml_emit_scalar_key&#160;()</title>
<indexterm zone="as-yaml-emit-scalar-key"><primary>as_yaml_emit_scalar_key</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_scalar_key (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-entry" role="function">
<title>as_yaml_emit_entry&#160;()</title>
<indexterm zone="as-yaml-emit-entry"><primary>as_yaml_emit_entry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_entry (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                    <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-entry-uint" role="function">
<title>as_yaml_emit_entry_uint&#160;()</title>
<indexterm zone="as-yaml-emit-entry-uint"><primary>as_yaml_emit_entry_uint</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_entry_uint (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                         <parameter><link linkend="guint"><type>guint</type></link> value</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-entry-timestamp" role="function">
<title>as_yaml_emit_entry_timestamp&#160;()</title>
<indexterm zone="as-yaml-emit-entry-timestamp"><primary>as_yaml_emit_entry_timestamp</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_entry_timestamp (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                              <parameter><link linkend="guint64"><type>guint64</type></link> unixtime</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-long-entry" role="function">
<title>as_yaml_emit_long_entry&#160;()</title>
<indexterm zone="as-yaml-emit-long-entry"><primary>as_yaml_emit_long_entry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_long_entry (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-sequence" role="function">
<title>as_yaml_emit_sequence&#160;()</title>
<indexterm zone="as-yaml-emit-sequence"><primary>as_yaml_emit_sequence</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_sequence (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                       <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *list</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-sequence-from-str-array" role="function">
<title>as_yaml_emit_sequence_from_str_array&#160;()</title>
<indexterm zone="as-yaml-emit-sequence-from-str-array"><primary>as_yaml_emit_sequence_from_str_array</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_sequence_from_str_array (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                      <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *array</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-localized-strv" role="function">
<title>as_yaml_emit_localized_strv&#160;()</title>
<indexterm zone="as-yaml-emit-localized-strv"><primary>as_yaml_emit_localized_strv</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_localized_strv (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                             <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                             <parameter><link linkend="GHashTable"><type>GHashTable</type></link> *ltab</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-get-localized-node" role="function">
<title>as_yaml_get_localized_node&#160;()</title>
<indexterm zone="as-yaml-get-localized-node"><primary>as_yaml_get_localized_node</primary></indexterm>
<programlisting language="C"><link linkend="GNode"><returnvalue>GNode</returnvalue></link>&#160;*
as_yaml_get_localized_node (<parameter><link linkend="AsContext"><type>AsContext</type></link> *ctx</parameter>,
                            <parameter><link linkend="GNode"><type>GNode</type></link> *node</parameter>,
                            <parameter><link linkend="gchar"><type>gchar</type></link> *locale_override</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-get-localized-value" role="function">
<title>as_yaml_get_localized_value&#160;()</title>
<indexterm zone="as-yaml-get-localized-value"><primary>as_yaml_get_localized_value</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_yaml_get_localized_value (<parameter><link linkend="AsContext"><type>AsContext</type></link> *ctx</parameter>,
                             <parameter><link linkend="GNode"><type>GNode</type></link> *node</parameter>,
                             <parameter><link linkend="gchar"><type>gchar</type></link> *locale_override</parameter>);</programlisting>
<para>Get localized string from a translated DEP-11 key</para>
</refsect2>
<refsect2 id="as-yaml-emit-localized-entry" role="function">
<title>as_yaml_emit_localized_entry&#160;()</title>
<indexterm zone="as-yaml-emit-localized-entry"><primary>as_yaml_emit_localized_entry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_localized_entry (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                              <parameter><link linkend="GHashTable"><type>GHashTable</type></link> *ltab</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-emit-long-localized-entry" role="function">
<title>as_yaml_emit_long_localized_entry&#160;()</title>
<indexterm zone="as-yaml-emit-long-localized-entry"><primary>as_yaml_emit_long_localized_entry</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_emit_long_localized_entry (<parameter><link linkend="yaml-emitter-t"><type>yaml_emitter_t</type></link> *emitter</parameter>,
                                   <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                   <parameter><link linkend="GHashTable"><type>GHashTable</type></link> *ltab</parameter>);</programlisting>
</refsect2>
<refsect2 id="as-yaml-list-to-str-array" role="function">
<title>as_yaml_list_to_str_array&#160;()</title>
<indexterm zone="as-yaml-list-to-str-array"><primary>as_yaml_list_to_str_array</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_yaml_list_to_str_array (<parameter><link linkend="GNode"><type>GNode</type></link> *node</parameter>,
                           <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *array</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="appstream-as-yaml.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>

</refentry>
