<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="AsComponent">
<refmeta>
<refentrytitle role="top_of_page" id="AsComponent.top_of_page">AsComponent</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  APPSTREAM Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>AsComponent</refname>
<refpurpose>Object representing a software component</refpurpose>
</refnamediv>

<refsect1 id="AsComponent.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-kind-to-string">as_component_kind_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="AsComponentKind"><returnvalue>AsComponentKind</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-kind-from-string">as_component_kind_from_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="AsComponent"><returnvalue>AsComponent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-new">as_component_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="AsComponent"><returnvalue>AsComponent</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-construct">as_component_construct</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-is-valid">as_component_is_valid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-to-string">as_component_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="AsComponentKind"><returnvalue>AsComponentKind</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-get-kind">as_component_get_kind</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-kind">as_component_set_kind</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-id">as_component_get_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-id">as_component_set_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-component-get-pkgnames">as_component_get_pkgnames</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-pkgnames">as_component_set_pkgnames</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-name">as_component_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-name">as_component_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-name-original">as_component_get_name_original</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-name-original">as_component_set_name_original</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-summary">as_component_get_summary</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-summary">as_component_set_summary</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-description">as_component_get_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-description">as_component_set_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-project-license">as_component_get_project_license</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-project-license">as_component_set_project_license</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-project-group">as_component_get_project_group</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-project-group">as_component_set_project_group</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-developer-name">as_component_get_developer_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-developer-name">as_component_set_developer_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-component-get-compulsory-for-desktops">as_component_get_compulsory_for_desktops</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-compulsory-for-desktops">as_component_set_compulsory_for_desktops</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-is-compulsory-for-desktop">as_component_is_compulsory_for_desktop</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-component-get-categories">as_component_get_categories</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-categories">as_component_set_categories</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-categories-from-str">as_component_set_categories_from_str</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-has-category">as_component_has_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-screenshots">as_component_get_screenshots</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-add-screenshot">as_component_add_screenshot</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-component-get-keywords">as_component_get_keywords</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-keywords">as_component_set_keywords</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-icon">as_component_get_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-icon">as_component_set_icon</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-icon-url">as_component_get_icon_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-set-icon-url">as_component_set_icon_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-provided-items">as_component_get_provided_items</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-add-provided-item">as_component_add_provided_item</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-provides-item">as_component_provides_item</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GHashTable"><returnvalue>GHashTable</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-urls">as_component_get_urls</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-url">as_component_get_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-add-url">as_component_add_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-releases">as_component_get_releases</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-add-release">as_component_add_release</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-extends">as_component_get_extends</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-add-extends">as_component_add_extends</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-add-language">as_component_add_language</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint"><returnvalue>gint</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-component-get-language">as_component_get_language</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-component-get-languages">as_component_get_languages</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="AsComponent.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="GStrv"><type>GStrv</type></link></entry><entry role="property_name"><link linkend="AsComponent--categories">categories</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--description">description</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--icon">icon</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--icon-url">icon-url</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--id">id</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GStrv"><type>GStrv</type></link></entry><entry role="property_name"><link linkend="AsComponent--keywords">keywords</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="AsComponentKind"><type>AsComponentKind</type></link></entry><entry role="property_name"><link linkend="AsComponent--kind">kind</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GStrv"><type>GStrv</type></link></entry><entry role="property_name"><link linkend="AsComponent--mimetypes">mimetypes</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--name">name</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--name-original">name-original</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--pkgname">pkgname</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--project-license">project-license</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GPtrArray"><type>GPtrArray</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--screenshots">screenshots</link></entry><entry role="property_flags">Read</entry></row>
<row><entry role="property_type"><link linkend="gchar"><type>gchar</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--summary">summary</link></entry><entry role="property_flags">Read / Write</entry></row>
<row><entry role="property_type"><link linkend="GHashTable"><type>GHashTable</type></link>&#160;*</entry><entry role="property_name"><link linkend="AsComponent--urls">urls</link></entry><entry role="property_flags">Read</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="AsComponent.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="AsComponentKind">AsComponentKind</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="AsComponent.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GEnum">GEnum</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> AsComponentKind
    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> AsComponent
</screen>
</refsect1>

<refsect1 id="AsComponent.includes"><title>Includes</title><synopsis>#include &lt;appstream.h&gt;
</synopsis></refsect1>

<refsect1 id="AsComponent.description" role="desc">
<title role="desc.title">Description</title>
<para>This object represents an Appstream software component which is associated
to a package in the distribution's repositories.
A component can be anything, ranging from an application to a font, a codec or
even a non-visual software project providing libraries and python-modules for
other applications to use.</para>
<para>The type of the component is stored as <link linkend="AsComponentKind"><type>AsComponentKind</type></link> and can be queried to
find out which kind of component we're dealing with.</para>
<para>See also: <link linkend="AsProvidesKind"><type>AsProvidesKind</type></link>, <link linkend="AsDatabase"><type>AsDatabase</type></link></para>

</refsect1>
<refsect1 id="AsComponent.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="as-component-kind-to-string" role="function">
<title>as_component_kind_to_string&#160;()</title>
<indexterm zone="as-component-kind-to-string"><primary>as_component_kind_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_kind_to_string (<parameter><link linkend="AsComponentKind"><type>AsComponentKind</type></link> kind</parameter>);</programlisting>
<para>Converts the enumerated value to an text representation.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>kind</para></entry>
<entry role="parameter_description"><para>the <link linkend="AsComponentKind"><literal>AsComponentKind</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> string version of <parameter>kind</parameter>
</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-kind-from-string" role="function">
<title>as_component_kind_from_string&#160;()</title>
<indexterm zone="as-component-kind-from-string"><primary>as_component_kind_from_string</primary></indexterm>
<programlisting language="C"><link linkend="AsComponentKind"><returnvalue>AsComponentKind</returnvalue></link>
as_component_kind_from_string (<parameter>const <link linkend="gchar"><type>gchar</type></link> *kind_str</parameter>);</programlisting>
<para>Converts the text representation to an enumerated value.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>kind_str</para></entry>
<entry role="parameter_description"><para>the string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> a <link linkend="AsComponentKind"><type>AsComponentKind</type></link> or <link linkend="AS-COMPONENT-KIND-UNKNOWN:CAPS"><literal>AS_COMPONENT_KIND_UNKNOWN</literal></link> for unknown</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-new" role="function">
<title>as_component_new&#160;()</title>
<indexterm zone="as-component-new"><primary>as_component_new</primary></indexterm>
<programlisting language="C"><link linkend="AsComponent"><returnvalue>AsComponent</returnvalue></link>&#160;*
as_component_new (<parameter><type>void</type></parameter>);</programlisting>
<para>Creates a new <link linkend="AsComponent"><type>AsComponent</type></link>.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> a new <link linkend="AsComponent"><type>AsComponent</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-construct" role="function">
<title>as_component_construct&#160;()</title>
<indexterm zone="as-component-construct"><primary>as_component_construct</primary></indexterm>
<programlisting language="C"><link linkend="AsComponent"><returnvalue>AsComponent</returnvalue></link>&#160;*
as_component_construct (<parameter><link linkend="GType"><type>GType</type></link> object_type</parameter>);</programlisting>
<para>Construct an <link linkend="AsComponent"><type>AsComponent</type></link>.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> a new <link linkend="AsComponent"><type>AsComponent</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-is-valid" role="function">
<title>as_component_is_valid&#160;()</title>
<indexterm zone="as-component-is-valid"><primary>as_component_is_valid</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_component_is_valid (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Check if the essential properties of this Component are
populated with useful data.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> TRUE if the component data was validated successfully.</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-to-string" role="function">
<title>as_component_to_string&#160;()</title>
<indexterm zone="as-component-to-string"><primary>as_component_to_string</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_to_string (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Returns a string identifying this component.
(useful for debugging)</para>
<refsect3 role="returns">
<title>Returns</title>
<para> A descriptive string. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-get-kind" role="function">
<title>as_component_get_kind&#160;()</title>
<indexterm zone="as-component-get-kind"><primary>as_component_get_kind</primary></indexterm>
<programlisting language="C"><link linkend="AsComponentKind"><returnvalue>AsComponentKind</returnvalue></link>
as_component_get_kind (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<refsect3 role="returns">
<title>Returns</title>
<para>the <link linkend="AsComponentKind"><type>AsComponentKind</type></link> of this component.</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-kind" role="function">
<title>as_component_set_kind&#160;()</title>
<indexterm zone="as-component-set-kind"><primary>as_component_set_kind</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_kind (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                       <parameter><link linkend="AsComponentKind"><type>AsComponentKind</type></link> value</parameter>);</programlisting>
<para>Sets the <link linkend="AsComponentKind"><type>AsComponentKind</type></link> of this component.</para>
</refsect2>
<refsect2 id="as-component-get-id" role="function">
<title>as_component_get_id&#160;()</title>
<indexterm zone="as-component-get-id"><primary>as_component_get_id</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_id (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Set the unique identifier for this component.</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-id" role="function">
<title>as_component_set_id&#160;()</title>
<indexterm zone="as-component-set-id"><primary>as_component_set_id</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_id (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                     <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set the unique identifier for this component.</para>
</refsect2>
<refsect2 id="as-component-get-pkgnames" role="function">
<title>as_component_get_pkgnames&#160;()</title>
<indexterm zone="as-component-get-pkgnames"><primary>as_component_get_pkgnames</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_component_get_pkgnames (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get a list of package names which this component consists of.
This usually is just one package name.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> String array of package names. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-pkgnames" role="function">
<title>as_component_set_pkgnames&#160;()</title>
<indexterm zone="as-component-set-pkgnames"><primary>as_component_set_pkgnames</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_pkgnames (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                           <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>);</programlisting>
<para>Set a list of package names this component consists of.
(This should usually be just one package name)</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-get-name" role="function">
<title>as_component_get_name&#160;()</title>
<indexterm zone="as-component-get-name"><primary>as_component_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_name (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>
</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-name" role="function">
<title>as_component_set_name&#160;()</title>
<indexterm zone="as-component-set-name"><primary>as_component_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_name (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-component-get-name-original" role="function">
<title>as_component_get_name_original&#160;()</title>
<indexterm zone="as-component-get-name-original"><primary>as_component_get_name_original</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_name_original (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>
</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-name-original" role="function">
<title>as_component_set_name_original&#160;()</title>
<indexterm zone="as-component-set-name-original"><primary>as_component_set_name_original</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_name_original (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-component-get-summary" role="function">
<title>as_component_get_summary&#160;()</title>
<indexterm zone="as-component-get-summary"><primary>as_component_get_summary</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_summary (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>
</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-summary" role="function">
<title>as_component_set_summary&#160;()</title>
<indexterm zone="as-component-set-summary"><primary>as_component_set_summary</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_summary (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-component-get-description" role="function">
<title>as_component_get_description&#160;()</title>
<indexterm zone="as-component-get-description"><primary>as_component_get_description</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_description (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>
</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-description" role="function">
<title>as_component_set_description&#160;()</title>
<indexterm zone="as-component-set-description"><primary>as_component_set_description</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_description (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                              <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-component-get-project-license" role="function">
<title>as_component_get_project_license&#160;()</title>
<indexterm zone="as-component-get-project-license"><primary>as_component_get_project_license</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_project_license (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get the license of the project this component belongs to.</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-project-license" role="function">
<title>as_component_set_project_license&#160;()</title>
<indexterm zone="as-component-set-project-license"><primary>as_component_set_project_license</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_project_license (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                  <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set the project license.</para>
</refsect2>
<refsect2 id="as-component-get-project-group" role="function">
<title>as_component_get_project_group&#160;()</title>
<indexterm zone="as-component-get-project-group"><primary>as_component_get_project_group</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_project_group (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get the component's project group.</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-project-group" role="function">
<title>as_component_set_project_group&#160;()</title>
<indexterm zone="as-component-set-project-group"><primary>as_component_set_project_group</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_project_group (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set the component's project group.</para>
</refsect2>
<refsect2 id="as-component-get-developer-name" role="function">
<title>as_component_get_developer_name&#160;()</title>
<indexterm zone="as-component-get-developer-name"><primary>as_component_get_developer_name</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_developer_name (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get the component's developer or development team name.</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-developer-name" role="function">
<title>as_component_set_developer_name&#160;()</title>
<indexterm zone="as-component-set-developer-name"><primary>as_component_set_developer_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_developer_name (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                 <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set the the component's developer or development team name.</para>
</refsect2>
<refsect2 id="as-component-get-compulsory-for-desktops" role="function">
<title>as_component_get_compulsory_for_desktops&#160;()</title>
<indexterm zone="as-component-get-compulsory-for-desktops"><primary>as_component_get_compulsory_for_desktops</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_component_get_compulsory_for_desktops
                               (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<refsect3 role="returns">
<title>Returns</title>
<para> A list of desktops where this component is compulsory. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-compulsory-for-desktops" role="function">
<title>as_component_set_compulsory_for_desktops&#160;()</title>
<indexterm zone="as-component-set-compulsory-for-desktops"><primary>as_component_set_compulsory_for_desktops</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_compulsory_for_desktops
                               (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>);</programlisting>
<para>Set a list of desktops where this component is compulsory.</para>
</refsect2>
<refsect2 id="as-component-is-compulsory-for-desktop" role="function">
<title>as_component_is_compulsory_for_desktop&#160;()</title>
<indexterm zone="as-component-is-compulsory-for-desktop"><primary>as_component_is_compulsory_for_desktop</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_component_is_compulsory_for_desktop
                               (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *desktop</parameter>);</programlisting>
<para>Check if this component is compulsory for the given desktop.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if compulsory, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-get-categories" role="function">
<title>as_component_get_categories&#160;()</title>
<indexterm zone="as-component-get-categories"><primary>as_component_get_categories</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_component_get_categories (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<refsect3 role="returns">
<title>Returns</title>
<para> String array of categories. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-categories" role="function">
<title>as_component_set_categories&#160;()</title>
<indexterm zone="as-component-set-categories"><primary>as_component_set_categories</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_categories (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                             <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>);</programlisting>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-set-categories-from-str" role="function">
<title>as_component_set_categories_from_str&#160;()</title>
<indexterm zone="as-component-set-categories-from-str"><primary>as_component_set_categories_from_str</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_categories_from_str (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *categories_str</parameter>);</programlisting>
<para>Set the categories list from a string</para>
<para><parameter>self</parameter>
 a valid <link linkend="AsComponent"><type>AsComponent</type></link> instance
<parameter>categories_str</parameter>
 Semicolon-separated list of category-names</para>
</refsect2>
<refsect2 id="as-component-has-category" role="function">
<title>as_component_has_category&#160;()</title>
<indexterm zone="as-component-has-category"><primary>as_component_has_category</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_component_has_category (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *category</parameter>);</programlisting>
<para>Check if component is in the specified category.</para>
<refsect3 role="returns">
<title>Returns</title>

<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-get-screenshots" role="function">
<title>as_component_get_screenshots&#160;()</title>
<indexterm zone="as-component-get-screenshots"><primary>as_component_get_screenshots</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_component_get_screenshots (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get a list of associated screenshots.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> an array of <link linkend="AsScreenshot"><type>AsScreenshot</type></link> instances. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> AsScreenshot][<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-add-screenshot" role="function">
<title>as_component_add_screenshot&#160;()</title>
<indexterm zone="as-component-add-screenshot"><primary>as_component_add_screenshot</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_add_screenshot (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                             <parameter><link linkend="AsScreenshot"><type>AsScreenshot</type></link> *sshot</parameter>);</programlisting>
<para>Add an <link linkend="AsScreenshot"><type>AsScreenshot</type></link> to this component.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>sshot</para></entry>
<entry role="parameter_description"><para>The <link linkend="AsScreenshot"><type>AsScreenshot</type></link> to add</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-get-keywords" role="function">
<title>as_component_get_keywords&#160;()</title>
<indexterm zone="as-component-get-keywords"><primary>as_component_get_keywords</primary></indexterm>
<programlisting language="C"><link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_component_get_keywords (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<refsect3 role="returns">
<title>Returns</title>
<para> String array of keywords. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-keywords" role="function">
<title>as_component_set_keywords&#160;()</title>
<indexterm zone="as-component-set-keywords"><primary>as_component_set_keywords</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_keywords (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                           <parameter><link linkend="gchar"><type>gchar</type></link> **value</parameter>);</programlisting>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>array</acronym> zero-terminated=1]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-get-icon" role="function">
<title>as_component_get_icon&#160;()</title>
<indexterm zone="as-component-get-icon"><primary>as_component_get_icon</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_icon (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para>the icon name for this component. This is usually
a stock icon name, e.g. "applications-science"</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-icon" role="function">
<title>as_component_set_icon&#160;()</title>
<indexterm zone="as-component-set-icon"><primary>as_component_set_icon</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_icon (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set a stock icon name for this component,
e.g. "applications-science"</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-get-icon-url" role="function">
<title>as_component_get_icon_url&#160;()</title>
<indexterm zone="as-component-get-icon-url"><primary>as_component_get_icon_url</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_icon_url (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para>the full url of this icon, e.g.
"/usr/share/icons/hicolor/64x64/foobar.png"
This might also be an http url pointing at a remote location.</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-set-icon-url" role="function">
<title>as_component_set_icon_url&#160;()</title>
<indexterm zone="as-component-set-icon-url"><primary>as_component_set_icon_url</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_set_icon_url (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Set an icon url for this component, which can be a remote
or local location.
The icon size pointed to should be 64x64 and the icon should ideally be
a PNG icon.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-get-provided-items" role="function">
<title>as_component_get_provided_items&#160;()</title>
<indexterm zone="as-component-get-provided-items"><primary>as_component_get_provided_items</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_component_get_provided_items (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get an array of the provides-items this component is
associated with.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> A list of desktops where this component is compulsory. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> utf8][<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-add-provided-item" role="function" condition="since:0.6.2">
<title>as_component_add_provided_item&#160;()</title>
<indexterm zone="as-component-add-provided-item" role="0.6.2"><primary>as_component_add_provided_item</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_add_provided_item (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                                <parameter><link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> kind</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>,
                                <parameter>const <link linkend="gchar"><type>gchar</type></link> *data</parameter>);</programlisting>
<para>Adds a provided item to the component.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>kind</para></entry>
<entry role="parameter_description"><para>the kind of the provided item (e.g. <link linkend="AS-PROVIDES-KIND-MIMETYPE:CAPS"><literal>AS_PROVIDES_KIND_MIMETYPE</literal></link>)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>additional data associated with this item, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since 0.6.2</para></refsect2>
<refsect2 id="as-component-provides-item" role="function">
<title>as_component_provides_item&#160;()</title>
<indexterm zone="as-component-provides-item"><primary>as_component_provides_item</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
as_component_provides_item (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                            <parameter><link linkend="AsProvidesKind"><type>AsProvidesKind</type></link> kind</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *value</parameter>);</programlisting>
<para>Checks if this component provides an item of the specified type</para>
<para><parameter>self</parameter>
 a valid <link linkend="AsComponent"><type>AsComponent</type></link>
<parameter>kind</parameter>
 the kind of the provides-item
<parameter>value</parameter>
 the value of the provides-item</para>
<refsect3 role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if an item was found</para>
<para></para>
</refsect3></refsect2>
<refsect2 id="as-component-get-urls" role="function" condition="since:0.6.2">
<title>as_component_get_urls&#160;()</title>
<indexterm zone="as-component-get-urls" role="0.6.2"><primary>as_component_get_urls</primary></indexterm>
<programlisting language="C"><link linkend="GHashTable"><returnvalue>GHashTable</returnvalue></link>&#160;*
as_component_get_urls (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Gets the URLs set for the component.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> URLs. </para>
<para><emphasis role="annotation">[<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since 0.6.2</para></refsect2>
<refsect2 id="as-component-get-url" role="function" condition="since:0.6.2">
<title>as_component_get_url&#160;()</title>
<indexterm zone="as-component-get-url" role="0.6.2"><primary>as_component_get_url</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_component_get_url (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                      <parameter><link linkend="AsUrlKind"><type>AsUrlKind</type></link> url_kind</parameter>);</programlisting>
<para>Gets a URL.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>url_kind</para></entry>
<entry role="parameter_description"><para>the URL kind, e.g. <link linkend="AS-URL-KIND-HOMEPAGE:CAPS"><literal>AS_URL_KIND_HOMEPAGE</literal></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> string, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if unset</para>
<para></para>
</refsect3><para role="since">Since 0.6.2</para></refsect2>
<refsect2 id="as-component-add-url" role="function" condition="since:0.6.2">
<title>as_component_add_url&#160;()</title>
<indexterm zone="as-component-add-url" role="0.6.2"><primary>as_component_add_url</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_add_url (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                      <parameter><link linkend="AsUrlKind"><type>AsUrlKind</type></link> url_kind</parameter>,
                      <parameter>const <link linkend="gchar"><type>gchar</type></link> *url</parameter>);</programlisting>
<para>Adds some URL data to the component.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>url_kind</para></entry>
<entry role="parameter_description"><para>the URL kind, e.g. <link linkend="AS-URL-KIND-HOMEPAGE:CAPS"><literal>AS_URL_KIND_HOMEPAGE</literal></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>url</para></entry>
<entry role="parameter_description"><para>the full URL.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since 0.6.2</para></refsect2>
<refsect2 id="as-component-get-releases" role="function">
<title>as_component_get_releases&#160;()</title>
<indexterm zone="as-component-get-releases"><primary>as_component_get_releases</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_component_get_releases (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get an array of the <link linkend="AsRelease"><type>AsRelease</type></link> items this component
provides.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> A list of releases. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> AsRelease][<acronym>transfer none</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-component-add-release" role="function">
<title>as_component_add_release&#160;()</title>
<indexterm zone="as-component-add-release"><primary>as_component_add_release</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_add_release (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                          <parameter><link linkend="AsRelease"><type>AsRelease</type></link> *release</parameter>);</programlisting>
<para>Add an <link linkend="AsRelease"><type>AsRelease</type></link> to this component.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>release</para></entry>
<entry role="parameter_description"><para>The <link linkend="AsRelease"><type>AsRelease</type></link> to add</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-get-extends" role="function" condition="since:0.7.0">
<title>as_component_get_extends&#160;()</title>
<indexterm zone="as-component-get-extends" role="0.7.0"><primary>as_component_get_extends</primary></indexterm>
<programlisting language="C"><link linkend="GPtrArray"><returnvalue>GPtrArray</returnvalue></link>&#160;*
as_component_get_extends (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *cpt</parameter>);</programlisting>
<para>Returns a string list of IDs of components which
are extended by this addon.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cpt</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> an array. </para>
<para><emphasis role="annotation">[<acronym>element-type</acronym> utf8][<acronym>transfer none</acronym>]</emphasis></para>
</refsect3><para role="since">Since 0.7.0</para></refsect2>
<refsect2 id="as-component-add-extends" role="function">
<title>as_component_add_extends&#160;()</title>
<indexterm zone="as-component-add-extends"><primary>as_component_add_extends</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_add_extends (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *cpt</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *cpt_id</parameter>);</programlisting>
<para>Add a reference to the extended component</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cpt</para></entry>
<entry role="parameter_description"><para>a <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cpt_id</para></entry>
<entry role="parameter_description"><para>The id of a component which is extended by this component</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="as-component-add-language" role="function" condition="since:0.7.0">
<title>as_component_add_language&#160;()</title>
<indexterm zone="as-component-add-language" role="0.7.0"><primary>as_component_add_language</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_component_add_language (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *locale</parameter>,
                           <parameter><link linkend="gint"><type>gint</type></link> percentage</parameter>);</programlisting>
<para>Adds a language to the component.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>locale</para></entry>
<entry role="parameter_description"><para>the locale, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. e.g. "en_GB"</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>percentage</para></entry>
<entry role="parameter_description"><para>the percentage completion of the translation, 0 for locales with unknown amount of translation</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since 0.7.0</para></refsect2>
<refsect2 id="as-component-get-language" role="function" condition="since:0.7.0">
<title>as_component_get_language&#160;()</title>
<indexterm zone="as-component-get-language" role="0.7.0"><primary>as_component_get_language</primary></indexterm>
<programlisting language="C"><link linkend="gint"><returnvalue>gint</returnvalue></link>
as_component_get_language (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *locale</parameter>);</programlisting>
<para>Gets the translation coverage in percent for a specific locale</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>locale</para></entry>
<entry role="parameter_description"><para>the locale, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. e.g. "en_GB"</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> a percentage value, -1 if locale was not found</para>
<para></para>
</refsect3><para role="since">Since 0.7.0</para></refsect2>
<refsect2 id="as-component-get-languages" role="function" condition="since:0.7.0">
<title>as_component_get_languages&#160;()</title>
<indexterm zone="as-component-get-languages" role="0.7.0"><primary>as_component_get_languages</primary></indexterm>
<programlisting language="C"><link linkend="GList"><returnvalue>GList</returnvalue></link>&#160;*
as_component_get_languages (<parameter><link linkend="AsComponent"><type>AsComponent</type></link> *self</parameter>);</programlisting>
<para>Get a list of all languages.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>self</para></entry>
<entry role="parameter_description"><para>an <link linkend="AsComponent"><type>AsComponent</type></link> instance.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> list of locales. </para>
<para><emphasis role="annotation">[<acronym>transfer container</acronym>][<acronym>element-type</acronym> utf8]</emphasis></para>
</refsect3><para role="since">Since 0.7.0</para></refsect2>

</refsect1>
<refsect1 id="AsComponent.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="AsComponentKind" role="enum">
<title>enum AsComponentKind</title>
<indexterm zone="AsComponentKind"><primary>AsComponentKind</primary></indexterm>
<para>The URL type.</para>
<refsect3 role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-UNKNOWN:CAPS">AS_COMPONENT_KIND_UNKNOWN</para></entry>
<entry role="enum_member_description"><para>Type invalid or not known</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-GENERIC:CAPS">AS_COMPONENT_KIND_GENERIC</para></entry>
<entry role="enum_member_description"><para>A generic (= without specialized type) component</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-DESKTOP-APP:CAPS">AS_COMPONENT_KIND_DESKTOP_APP</para></entry>
<entry role="enum_member_description"><para>An application with a .desktop-file</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-FONT:CAPS">AS_COMPONENT_KIND_FONT</para></entry>
<entry role="enum_member_description"><para>A font</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-CODEC:CAPS">AS_COMPONENT_KIND_CODEC</para></entry>
<entry role="enum_member_description"><para>A multimedia codec</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-INPUTMETHOD:CAPS">AS_COMPONENT_KIND_INPUTMETHOD</para></entry>
<entry role="enum_member_description"><para>An input-method provider</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-ADDON:CAPS">AS_COMPONENT_KIND_ADDON</para></entry>
<entry role="enum_member_description"><para>An extension of existing software, which does not run standalone</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="AS-COMPONENT-KIND-LAST:CAPS">AS_COMPONENT_KIND_LAST</para></entry>
<entry role="enum_member_description"></entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="AsComponent.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="AsComponent--categories" role="property"><title>The <literal>“categories”</literal> property</title>
<indexterm zone="AsComponent--categories"><primary>AsComponent:categories</primary></indexterm>
<programlisting>  “categories”               <link linkend="GStrv"><type>GStrv</type></link></programlisting>
<para>categories.</para><para>Flags: Read / Write</para>
</refsect2>
<refsect2 id="AsComponent--description" role="property"><title>The <literal>“description”</literal> property</title>
<indexterm zone="AsComponent--description"><primary>AsComponent:description</primary></indexterm>
<programlisting>  “description”              <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>description.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--icon" role="property"><title>The <literal>“icon”</literal> property</title>
<indexterm zone="AsComponent--icon"><primary>AsComponent:icon</primary></indexterm>
<programlisting>  “icon”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>icon.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--icon-url" role="property"><title>The <literal>“icon-url”</literal> property</title>
<indexterm zone="AsComponent--icon-url"><primary>AsComponent:icon-url</primary></indexterm>
<programlisting>  “icon-url”                 <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>icon-url.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--id" role="property"><title>The <literal>“id”</literal> property</title>
<indexterm zone="AsComponent--id"><primary>AsComponent:id</primary></indexterm>
<programlisting>  “id”                       <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>id.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--keywords" role="property"><title>The <literal>“keywords”</literal> property</title>
<indexterm zone="AsComponent--keywords"><primary>AsComponent:keywords</primary></indexterm>
<programlisting>  “keywords”                 <link linkend="GStrv"><type>GStrv</type></link></programlisting>
<para>keywords.</para><para>Flags: Read / Write</para>
</refsect2>
<refsect2 id="AsComponent--kind" role="property"><title>The <literal>“kind”</literal> property</title>
<indexterm zone="AsComponent--kind"><primary>AsComponent:kind</primary></indexterm>
<programlisting>  “kind”                     <link linkend="AsComponentKind"><type>AsComponentKind</type></link></programlisting>
<para>kind.</para><para>Flags: Read / Write</para>
<para>Default value: AS_COMPONENT_KIND_UNKNOWN</para>
</refsect2>
<refsect2 id="AsComponent--mimetypes" role="property"><title>The <literal>“mimetypes”</literal> property</title>
<indexterm zone="AsComponent--mimetypes"><primary>AsComponent:mimetypes</primary></indexterm>
<programlisting>  “mimetypes”                <link linkend="GStrv"><type>GStrv</type></link></programlisting>
<para>mimetypes.</para><para>Flags: Read / Write</para>
</refsect2>
<refsect2 id="AsComponent--name" role="property"><title>The <literal>“name”</literal> property</title>
<indexterm zone="AsComponent--name"><primary>AsComponent:name</primary></indexterm>
<programlisting>  “name”                     <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>name.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--name-original" role="property"><title>The <literal>“name-original”</literal> property</title>
<indexterm zone="AsComponent--name-original"><primary>AsComponent:name-original</primary></indexterm>
<programlisting>  “name-original”            <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>name-original.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--pkgname" role="property"><title>The <literal>“pkgname”</literal> property</title>
<indexterm zone="AsComponent--pkgname"><primary>AsComponent:pkgname</primary></indexterm>
<programlisting>  “pkgname”                  <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>pkgname.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--project-license" role="property"><title>The <literal>“project-license”</literal> property</title>
<indexterm zone="AsComponent--project-license"><primary>AsComponent:project-license</primary></indexterm>
<programlisting>  “project-license”          <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>project-license.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--screenshots" role="property"><title>The <literal>“screenshots”</literal> property</title>
<indexterm zone="AsComponent--screenshots"><primary>AsComponent:screenshots</primary></indexterm>
<programlisting>  “screenshots”              <link linkend="GPtrArray"><type>GPtrArray</type></link>&#160;*</programlisting>
<para>screenshots.</para><para>Flags: Read</para>
</refsect2>
<refsect2 id="AsComponent--summary" role="property"><title>The <literal>“summary”</literal> property</title>
<indexterm zone="AsComponent--summary"><primary>AsComponent:summary</primary></indexterm>
<programlisting>  “summary”                  <link linkend="gchar"><type>gchar</type></link>&#160;*</programlisting>
<para>summary.</para><para>Flags: Read / Write</para>
<para>Default value: NULL</para>
</refsect2>
<refsect2 id="AsComponent--urls" role="property"><title>The <literal>“urls”</literal> property</title>
<indexterm zone="AsComponent--urls"><primary>AsComponent:urls</primary></indexterm>
<programlisting>  “urls”                     <link linkend="GHashTable"><type>GHashTable</type></link>&#160;*</programlisting>
<para>urls.</para><para>Flags: Read</para>
</refsect2>

</refsect1>

</refentry>
