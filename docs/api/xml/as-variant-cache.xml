<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="appstream-as-variant-cache">
<refmeta>
<refentrytitle role="top_of_page" id="appstream-as-variant-cache.top_of_page">as-variant-cache</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>APPSTREAM Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>as-variant-cache</refname>
<refpurpose>Helper functions for AppStream's GVariant-based on-disk serialization.</refpurpose>
</refnamediv>

<refsect1 id="appstream-as-variant-cache.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-variant-get-dict-uint32">as_variant_get_dict_uint32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
</entry><entry role="function_name"><link linkend="as-variant-get-dict-strv">as_variant_get_dict_strv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-variant-get-dict-str">as_variant_get_dict_str</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-variant-get-mstring">as_variant_get_mstring</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-variant-mstring-new">as_variant_mstring_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-variant-get-dict-mstr">as_variant_get_dict_mstr</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gint"><returnvalue>gint</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-variant-get-dict-int32">as_variant_get_dict_int32</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="as-variant-from-string-ptrarray">as_variant_from_string_ptrarray</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-variant-to-string-ptrarray">as_variant_to_string_ptrarray</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-variant-to-string-ptrarray-by-dict">as_variant_to_string_ptrarray_by_dict</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="as-variant-builder-add-kv">as_variant_builder_add_kv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="appstream-as-variant-cache.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="CACHE-FORMAT-VERSION:CAPS">CACHE_FORMAT_VERSION</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>

<refsect1 id="appstream-as-variant-cache.includes"><title>Includes</title><synopsis>#include &lt;appstream.h&gt;
</synopsis></refsect1>

<refsect1 id="appstream-as-variant-cache.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="appstream-as-variant-cache.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="as-variant-get-dict-uint32" role="function">
<title>as_variant_get_dict_uint32&#160;()</title>
<indexterm zone="as-variant-get-dict-uint32"><primary>as_variant_get_dict_uint32</primary></indexterm>
<programlisting language="C"><link linkend="guint32"><returnvalue>guint32</returnvalue></link>
as_variant_get_dict_uint32 (<parameter><link linkend="GVariantDict"><type>GVariantDict</type></link> *dict</parameter>,
                            <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);</programlisting>
<para>Get a an uint32 from a dictionary.</para>
</refsect2>
<refsect2 id="as-variant-get-dict-strv" role="function">
<title>as_variant_get_dict_strv&#160;()</title>
<indexterm zone="as-variant-get-dict-strv"><primary>as_variant_get_dict_strv</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;**
as_variant_get_dict_strv (<parameter><link linkend="GVariantDict"><type>GVariantDict</type></link> *dict</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                          <parameter><link linkend="GVariant"><type>GVariant</type></link> **var</parameter>);</programlisting>
<para>Get a strv from a dictionary.</para>
<refsect3 id="as-variant-get-dict-strv.returns" role="returns">
<title>Returns</title>
<para> A gchar**. </para>
<para><emphasis role="annotation">[<acronym>transfer container</acronym>]</emphasis></para>
</refsect3></refsect2>
<refsect2 id="as-variant-get-dict-str" role="function">
<title>as_variant_get_dict_str&#160;()</title>
<indexterm zone="as-variant-get-dict-str"><primary>as_variant_get_dict_str</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_variant_get_dict_str (<parameter><link linkend="GVariantDict"><type>GVariantDict</type></link> *dict</parameter>,
                         <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                         <parameter><link linkend="GVariant"><type>GVariant</type></link> **var</parameter>);</programlisting>
<para>Get a string from a GVariant dictionary.</para>
</refsect2>
<refsect2 id="as-variant-get-mstring" role="function">
<title>as_variant_get_mstring&#160;()</title>
<indexterm zone="as-variant-get-mstring"><primary>as_variant_get_mstring</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_variant_get_mstring (<parameter><link linkend="GVariant"><type>GVariant</type></link> **var</parameter>);</programlisting>
<para>
</para>
</refsect2>
<refsect2 id="as-variant-mstring-new" role="function">
<title>as_variant_mstring_new&#160;()</title>
<indexterm zone="as-variant-mstring-new"><primary>as_variant_mstring_new</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
as_variant_mstring_new (<parameter>const <link linkend="gchar"><type>gchar</type></link> *str</parameter>);</programlisting>
<para>Create a string wrapped in a maybe GVariant.</para>
</refsect2>
<refsect2 id="as-variant-get-dict-mstr" role="function">
<title>as_variant_get_dict_mstr&#160;()</title>
<indexterm zone="as-variant-get-dict-mstr"><primary>as_variant_get_dict_mstr</primary></indexterm>
<programlisting language="C">const <link linkend="gchar"><returnvalue>gchar</returnvalue></link>&#160;*
as_variant_get_dict_mstr (<parameter><link linkend="GVariantDict"><type>GVariantDict</type></link> *dict</parameter>,
                          <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                          <parameter><link linkend="GVariant"><type>GVariant</type></link> **var</parameter>);</programlisting>
<para>Get a string wrapped in a maybe GVariant from a dictionary.</para>
</refsect2>
<refsect2 id="as-variant-get-dict-int32" role="function">
<title>as_variant_get_dict_int32&#160;()</title>
<indexterm zone="as-variant-get-dict-int32"><primary>as_variant_get_dict_int32</primary></indexterm>
<programlisting language="C"><link linkend="gint"><returnvalue>gint</returnvalue></link>
as_variant_get_dict_int32 (<parameter><link linkend="GVariantDict"><type>GVariantDict</type></link> *dict</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>);</programlisting>
<para>Get a an uint32 from a dictionary.</para>
</refsect2>
<refsect2 id="as-variant-from-string-ptrarray" role="function">
<title>as_variant_from_string_ptrarray&#160;()</title>
<indexterm zone="as-variant-from-string-ptrarray"><primary>as_variant_from_string_ptrarray</primary></indexterm>
<programlisting language="C"><link linkend="GVariant"><returnvalue>GVariant</returnvalue></link>&#160;*
as_variant_from_string_ptrarray (<parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *strarray</parameter>);</programlisting>
<para>Add key/value pair with a string key and variant value.</para>
</refsect2>
<refsect2 id="as-variant-to-string-ptrarray" role="function">
<title>as_variant_to_string_ptrarray&#160;()</title>
<indexterm zone="as-variant-to-string-ptrarray"><primary>as_variant_to_string_ptrarray</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_variant_to_string_ptrarray (<parameter><link linkend="GVariant"><type>GVariant</type></link> *var</parameter>,
                               <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *dest</parameter>);</programlisting>
<para>Add contents of array-type variant to string list.</para>
</refsect2>
<refsect2 id="as-variant-to-string-ptrarray-by-dict" role="function">
<title>as_variant_to_string_ptrarray_by_dict&#160;()</title>
<indexterm zone="as-variant-to-string-ptrarray-by-dict"><primary>as_variant_to_string_ptrarray_by_dict</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_variant_to_string_ptrarray_by_dict (<parameter><link linkend="GVariantDict"><type>GVariantDict</type></link> *dict</parameter>,
                                       <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                                       <parameter><link linkend="GPtrArray"><type>GPtrArray</type></link> *dest</parameter>);</programlisting>
<para>Add contents of array-type variant to string list using a dictionary key
to get the source variant.</para>
</refsect2>
<refsect2 id="as-variant-builder-add-kv" role="function">
<title>as_variant_builder_add_kv&#160;()</title>
<indexterm zone="as-variant-builder-add-kv"><primary>as_variant_builder_add_kv</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
as_variant_builder_add_kv (<parameter><link linkend="GVariantBuilder"><type>GVariantBuilder</type></link> *builder</parameter>,
                           <parameter>const <link linkend="gchar"><type>gchar</type></link> *key</parameter>,
                           <parameter><link linkend="GVariant"><type>GVariant</type></link> *value</parameter>);</programlisting>
<para>Add key/value pair with a string key and variant value.</para>
</refsect2>

</refsect1>
<refsect1 id="appstream-as-variant-cache.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="CACHE-FORMAT-VERSION:CAPS" role="macro">
<title>CACHE_FORMAT_VERSION</title>
<indexterm zone="CACHE-FORMAT-VERSION:CAPS"><primary>CACHE_FORMAT_VERSION</primary></indexterm>
<programlisting language="C">#define CACHE_FORMAT_VERSION 1
</programlisting>
<para>
</para>
</refsect2>

</refsect1>

</refentry>
