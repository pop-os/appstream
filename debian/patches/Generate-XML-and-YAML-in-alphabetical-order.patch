From: Robert Ancell <robert.ancell@canonical.com>
Date: Fri, 22 Mar 2019 15:26:15 +1300
Subject: Generate XML and YAML in alphabetical order

This stops the tests breaking when the GHashTable ordering changed in GLib 2.59.

Origin: upstream, commit:0609f04cf7c2bf3667cbee96d344c0792bd75082
---
 src/as-component.c   | 64 ++++++++++++++++++++++++++++------------------------
 src/as-xml.c         | 26 +++++++++++----------
 tests/test-pool.c    | 10 ++++++++
 tests/test-xmldata.c | 10 ++++----
 4 files changed, 64 insertions(+), 46 deletions(-)

diff --git a/src/as-component.c b/src/as-component.c
index cb59c0c..1270656 100644
--- a/src/as-component.c
+++ b/src/as-component.c
@@ -3734,14 +3734,15 @@ static void
 as_component_xml_keywords_to_node (AsComponent *cpt, xmlNode *root)
 {
 	AsComponentPrivate *priv = GET_PRIVATE (cpt);
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 
-	g_hash_table_iter_init (&iter, priv->keywords);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
+	keys = g_hash_table_get_keys (priv->keywords);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
 		xmlNode *node;
-		const gchar *locale = (const gchar*) key;
-		gchar **kws = (gchar**) value;
+		const gchar *locale = (const gchar*) link->data;
+		gchar **kws = (gchar**) g_hash_table_lookup (priv->keywords, locale);
 
 		/* skip cruft */
 		if (as_is_cruft_locale (locale))
@@ -3891,22 +3892,23 @@ as_component_xml_serialize_languages (AsComponent *cpt, xmlNode *cptnode)
 {
 	AsComponentPrivate *priv = GET_PRIVATE (cpt);
 	xmlNode *node;
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 
 	if (g_hash_table_size (priv->languages) == 0)
 		return;
 
 	node = xmlNewChild (cptnode, NULL, (xmlChar*) "languages", NULL);
-	g_hash_table_iter_init (&iter, priv->languages);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
+	keys = g_hash_table_get_keys (priv->languages);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
 		guint percentage;
 		const gchar *locale;
 		xmlNode *l_node;
 		g_autofree gchar *percentage_str = NULL;
 
-		locale = (const gchar*) key;
-		percentage = GPOINTER_TO_INT (value);
+		locale = (const gchar*) link->data;
+		percentage = GPOINTER_TO_INT (g_hash_table_lookup (priv->languages, locale));
 		percentage_str = g_strdup_printf("%i", percentage);
 
 		l_node = xmlNewTextChild (node,
@@ -3927,21 +3929,23 @@ as_component_xml_serialize_custom (AsComponent *cpt, xmlNode *cptnode)
 {
 	AsComponentPrivate *priv = GET_PRIVATE (cpt);
 	xmlNode *node;
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 
 	if (g_hash_table_size (priv->custom) == 0)
 		return;
 
 	node = xmlNewChild (cptnode, NULL, (xmlChar*) "custom", NULL);
-	g_hash_table_iter_init (&iter, priv->custom);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
+	keys = g_hash_table_get_keys (priv->custom);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
+		const gchar *key = (const gchar*) link->data;
 		xmlNode *snode;
 
 		snode = xmlNewTextChild (node,
 					  NULL,
 					  (xmlChar*) "value",
-					  (xmlChar*) value);
+					  (xmlChar*) g_hash_table_lookup (priv->custom, key));
 		xmlNewProp (snode,
 			    (xmlChar*) "key",
 			    (xmlChar*) key);
@@ -4861,8 +4865,8 @@ static void
 as_component_yaml_emit_languages (AsComponent *cpt, yaml_emitter_t *emitter)
 {
 	AsComponentPrivate *priv = GET_PRIVATE (cpt);
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 
 	if (g_hash_table_size (priv->languages) == 0)
 		return;
@@ -4870,13 +4874,14 @@ as_component_yaml_emit_languages (AsComponent *cpt, yaml_emitter_t *emitter)
 	as_yaml_emit_scalar (emitter, "Languages");
 	as_yaml_sequence_start (emitter);
 
-	g_hash_table_iter_init (&iter, priv->languages);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
+	keys = g_hash_table_get_keys (priv->languages);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
 		guint percentage;
 		const gchar *locale;
 
-		locale = (const gchar*) key;
-		percentage = GPOINTER_TO_INT (value);
+		locale = (const gchar*) link->data;
+		percentage = GPOINTER_TO_INT (g_hash_table_lookup (priv->languages, locale));
 
 		as_yaml_mapping_start (emitter);
 		as_yaml_emit_entry (emitter, "locale", locale);
@@ -4894,8 +4899,8 @@ static void
 as_component_yaml_emit_custom (AsComponent *cpt, yaml_emitter_t *emitter)
 {
 	AsComponentPrivate *priv = GET_PRIVATE (cpt);
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 
 	if (g_hash_table_size (priv->custom) == 0)
 		return;
@@ -4903,11 +4908,12 @@ as_component_yaml_emit_custom (AsComponent *cpt, yaml_emitter_t *emitter)
 	as_yaml_emit_scalar (emitter, "Custom");
 	as_yaml_mapping_start (emitter);
 
-	g_hash_table_iter_init (&iter, priv->custom);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
+	keys = g_hash_table_get_keys (priv->custom);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
 		as_yaml_emit_entry (emitter,
-				    (const gchar*) key,
-				    (const gchar*) value);
+				    (const gchar*) link->data,
+				    (const gchar*) g_hash_table_lookup (priv->custom, link->data));
 	}
 
 	as_yaml_mapping_end (emitter);
diff --git a/src/as-xml.c b/src/as-xml.c
index f107fc1..6ea91ce 100644
--- a/src/as-xml.c
+++ b/src/as-xml.c
@@ -355,14 +355,15 @@ out:
 void
 as_xml_add_description_node (AsContext *ctx, xmlNode *root, GHashTable *desc_table)
 {
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 	xmlNode *desc_node = NULL;
 
-	g_hash_table_iter_init (&iter, desc_table);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
-		const gchar *locale = (const gchar*) key;
-		const gchar *desc_markup = (const gchar*) value;
+	keys = g_hash_table_get_keys (desc_table);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
+		const gchar *locale = (const gchar*) link->data;
+		const gchar *desc_markup = g_hash_table_lookup (desc_table, locale);
 
 		if (as_is_cruft_locale (locale))
 			continue;
@@ -379,14 +380,15 @@ as_xml_add_description_node (AsContext *ctx, xmlNode *root, GHashTable *desc_tab
 void
 as_xml_add_localized_text_node (xmlNode *root, const gchar *node_name, GHashTable *value_table)
 {
-	GHashTableIter iter;
-	gpointer key, value;
+	g_autoptr(GList) keys = NULL;
+	GList *link;
 
-	g_hash_table_iter_init (&iter, value_table);
-	while (g_hash_table_iter_next (&iter, &key, &value)) {
+	keys = g_hash_table_get_keys (value_table);
+	keys = g_list_sort (keys, (GCompareFunc) g_ascii_strcasecmp);
+	for (link = keys; link != NULL; link = link->next) {
 		xmlNode *cnode;
-		const gchar *locale = (const gchar*) key;
-		const gchar *str = (const gchar*) value;
+		const gchar *locale = (const gchar*) link->data;
+		const gchar *str = (const gchar*) g_hash_table_lookup (value_table, locale);
 
 		if (as_str_empty (str))
 			continue;
diff --git a/tests/test-pool.c b/tests/test-pool.c
index fed31ab..034b61c 100644
--- a/tests/test-pool.c
+++ b/tests/test-pool.c
@@ -207,6 +207,14 @@ as_assert_component_lists_equal (GPtrArray *cpts_a, GPtrArray *cpts_b)
 	g_assert (as_test_compare_lines (cpts_a_xml, cpts_b_xml));
 }
 
+static gint
+compare_component (gconstpointer a, gconstpointer b)
+{
+	AsComponent *ca = *((AsComponent**) a);
+	AsComponent *cb = *((AsComponent**) b);
+	return g_ascii_strcasecmp (as_component_get_id (ca), as_component_get_id (cb));
+}
+
 /**
  * test_cache_complex:
  *
@@ -235,6 +243,7 @@ test_cache_complex ()
 	/* get XML representation of the data currently in the pool */
 	mdata = as_metadata_new ();
 	cpts = as_pool_get_components (pool);
+	g_ptr_array_sort (cpts, compare_component);
 	for (i = 0; i < cpts->len; i++) {
 		AsComponent *cpt = AS_COMPONENT (g_ptr_array_index (cpts, i));
 
@@ -269,6 +278,7 @@ test_cache_complex ()
 
 	as_metadata_clear_components (mdata);
 	cpts = as_pool_get_components (pool);
+	g_ptr_array_sort (cpts, compare_component);
 	for (i = 0; i < cpts->len; i++) {
 		AsComponent *cpt = AS_COMPONENT (g_ptr_array_index (cpts, i));
 		as_metadata_add_component (mdata, cpt);
diff --git a/tests/test-xmldata.c b/tests/test-xmldata.c
index b2e077b..d57e961 100644
--- a/tests/test-xmldata.c
+++ b/tests/test-xmldata.c
@@ -145,11 +145,11 @@ test_appstream_write_locale ()
 	const gchar *EXPECTED_XML = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
 				    "<component type=\"desktop-application\">\n"
 				    "  <id>firefox.desktop</id>\n"
-				    "  <name xml:lang=\"fr_FR\">Firefoux</name>\n"
 				    "  <name>Firefox</name>\n"
 				    "  <name xml:lang=\"de_DE\">Feuerfuchs</name>\n"
-				    "  <summary xml:lang=\"fr_FR\">Navigateur web</summary>\n"
+				    "  <name xml:lang=\"fr_FR\">Firefoux</name>\n"
 				    "  <summary>Web browser</summary>\n"
+				    "  <summary xml:lang=\"fr_FR\">Navigateur web</summary>\n"
 				    "  <pkgname>firefox-bin</pkgname>\n"
 				    "  <categories>\n"
 				    "    <category>network</category>\n"
@@ -897,8 +897,8 @@ test_appstream_write_metainfo_to_collection (void)
 					   "<components version=\"0.12\">\n"
 					   "  <component>\n"
 					   "    <id>org.example.Test</id>\n"
-					   "    <name xml:lang=\"de\">Test</name>\n"
 					   "    <name>Test</name>\n"
+					   "    <name xml:lang=\"de\">Test</name>\n"
 					   "    <name xml:lang=\"eo\">Testo</name>\n"
 					   "    <summary>Just a unittest.</summary>\n"
 					   "    <summary xml:lang=\"de\">Nur ein Unittest.</summary>\n"
@@ -961,8 +961,8 @@ static const gchar *xmldata_screenshots = "<?xml version=\"1.0\" encoding=\"utf-
 					"  <id>org.example.ScreenshotTest</id>\n"
 					"  <screenshots>\n"
 					"    <screenshot type=\"default\">\n"
-					"      <caption xml:lang=\"de_DE\">Das Hauptfenster, welches irgendwas zeigt</caption>\n"
 					"      <caption>The main window displaying a thing</caption>\n"
+					"      <caption xml:lang=\"de_DE\">Das Hauptfenster, welches irgendwas zeigt</caption>\n"
 					"      <image type=\"source\" width=\"1916\" height=\"1056\">https://example.org/alpha.png</image>\n"
 					"      <image type=\"thumbnail\" width=\"800\" height=\"600\">https://example.org/alpha_small.png</image>\n"
 					"    </screenshot>\n"
@@ -1262,8 +1262,8 @@ static const gchar *xmldata_agreements = "<?xml version=\"1.0\" encoding=\"utf-8
 						"  <id>org.example.AgreementsTest</id>\n"
 						"  <agreement type=\"eula\" version_id=\"1.2.3a\">\n"
 						"    <agreement_section type=\"intro\">\n"
-						"      <name xml:lang=\"de_DE\">Einführung</name>\n"
 						"      <name>Intro</name>\n"
+						"      <name xml:lang=\"de_DE\">Einführung</name>\n"
 						"      <description>\n"
 						"        <p>Mighty Fine</p>\n"
 						"      </description>\n"
